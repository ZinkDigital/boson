format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes
compile options:
2 items
0 -> -encoding
1 -> UTF-8
javac options:
2 items
0 -> -g:none
1 -> -g
compiler version:
1 items
0 -> 2.12.3
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
38 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson$1.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson$BsonArraySerializer.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson$BsonObjectSerializer.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonArray$Iter.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonArray.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonObject$Entry.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonObject$Iter.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonObject.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/Lib$.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/Lib.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceAPI$.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceAPI$delayedInit$body.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceAPI.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceTests$.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceTests$delayedInit$body.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/APIFuse.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/APIwithByteArrTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/APIwithByteBufferTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BosonTester$.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BosonTester$delayedInit$body.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BosonTester.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BuffersTest.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/ExtractorTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/HorribleTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/InjectorParserTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/InjectorsTest.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/LanguageTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/LongInputTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/RestAssured.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/ReturnTypes.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/injectorAPITests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/jpPlusPlusInjectorTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/jpPlusPlusTests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/joson/APItests.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/mapper/Mapper$.class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/mapper/Mapper.class
binary dependencies:
127 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.9.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/.ivy2/cache/de.undercouch/bson4jackson/jars/bson4jackson-2.7.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/.ivy2/cache/com.jayway.jsonpath/json-path/jars/json-path-2.4.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/.ivy2/cache/com.storm-enroute/scalameter-core_2.12/jars/scalameter-core_2.12-0.8.2.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/com.squareup.okhttp3/mockwebserver/jars/mockwebserver-3.9.1.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/io.rest-assured/rest-assured/jars/rest-assured-3.0.6.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/org.hamcrest/hamcrest-core/jars/hamcrest-core-1.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/org.hamcrest/hamcrest-library/jars/hamcrest-library-1.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.9.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/de.undercouch/bson4jackson/jars/bson4jackson-2.7.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
47 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> /Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java
member reference external dependencies:
144 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.joson.Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.joson.Joson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io.zink.joson.impl.JosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io.zink.boson.impl.BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonPath.Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonPath.Interpreter$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonPath.Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonPath.TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.BsException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.BsException$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.BsObject$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.DefaultWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.bson.bsonValue.Writes$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonPath.Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonPath.Interpreter$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonPath.Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonPath.TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsBoson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsBoson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsException$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsObject$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.DefaultWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.bson.bsonValue.Writes$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.impl.BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonPath.Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonPath.Interpreter$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonPath.Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonPath.TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.BsObject$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.DefaultWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.bson.bsonValue.Writes$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonPath.Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonPath.Interpreter$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonPath.Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonPath.TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.BsObject$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.DefaultWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.bson.bsonValue.Writes$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> io.zink.boson.impl.BosonValidate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.bson.bsonValue.BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.bson.bsonValue.BsSeq$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.impl.BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.bson.bsonPath.ArrExpr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.bson.bsonPath.ArrExpr$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.bson.bsonPath.Statement
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.impl.BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.bson.bsonImpl.Dictionary$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.impl.BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.Boson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.bson.bsonImpl.BosonImpl$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.bson.bsonValue.BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.impl.BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.boson.impl.BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.joson.Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.joson.Joson$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.joson.impl.JosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.joson.impl.JosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> io.zink.boson.bson.bsonImpl.CustomException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> io.zink.boson.bson.bsonImpl.CustomException$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> io.zink.boson.bson.bsonImpl.Dictionary$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
38 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> bsonLib.Bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> bsonLib.Bson$1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> bsonLib.Bson$BsonArraySerializer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> bsonLib.Bson$BsonObjectSerializer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> bsonLib.BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> bsonLib.BsonArray$Iter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> bsonLib.BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> bsonLib.BsonObject$Entry
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> bsonLib.BsonObject$Iter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.Lib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.Lib$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.PerformanceAPI
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.PerformanceAPI$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.PerformanceAPI$delayedInit$body
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.PerformanceTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.PerformanceTests$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark.PerformanceTests$delayedInit$body
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io.zink.boson.APIFuse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io.zink.boson.APIwithByteArrTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io.zink.boson.APIwithByteBufferTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.BosonTester
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.BosonTester$
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io.zink.boson.BosonTester$delayedInit$body
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> io.zink.boson.BuffersTest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> io.zink.boson.ExtractorTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io.zink.boson.HorribleTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io.zink.boson.InjectorParserTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> io.zink.boson.InjectorsTest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io.zink.boson.LanguageTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io.zink.boson.LongInputTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> io.zink.boson.RestAssured
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> io.zink.boson.ReturnTypes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io.zink.boson.injectorAPITests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io.zink.boson.jpPlusPlusInjectorTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io.zink.boson.jpPlusPlusTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io.zink.joson.APItests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> mapper.Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> mapper.Mapper$
used names:
3066 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> ->
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> <repeated...>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> ?0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> App
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> ArrowAssoc
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> BSON_DOCUMENT
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> BufferedSource
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Codec
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Configuration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> CountDownLatch
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> DOCUMENT
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Iterator
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> JSON_DOCUMENT
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> JosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> JsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> JsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> JsonProvider
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Key
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> KeyValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> KeyWithDefaultValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Lib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> MeasureBuilder
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Object
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> PerformanceAPI
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> PerformanceTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Predicate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Quantity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> R
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> S
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Seq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> StringContext
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> URL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> VALID_BSON_DOC
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> Warmer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> _root_
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchRuns
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> benchmark
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> bestTimeMeasure
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> block
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson1Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson2Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson3Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson4Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> boson5Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> bufferedSource
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> close
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> com
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> config
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> core
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> countDown
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> defaultConfiguration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> doc
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> exec
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> fallbackSystemCodec
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> fromURL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> getClass
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> getLines
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> getResource
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> jayway
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson1Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson2Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson3Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson4Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> joson5Result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> json
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> jsonHelp
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> jsonObj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> jsonProvider
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> jsonStr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> jsonpath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchB1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchB2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchB3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchB4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchB5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchJ1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchJ2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchJ3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchJ4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> latchJ5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> maxWarmupRuns
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> measure
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> minWarmupRuns
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> parse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> read
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result1Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result1Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result1JsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result2Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result2Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result2JsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result3Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result3Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result3JsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result4Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result4Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result4JsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result5Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result5Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> result5JsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> s
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> scalameter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> time
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> toSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> validatedByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> vertx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> withWarmer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> APIFuse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Failure
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Float
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Seq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> StringContext
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Success
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Throwable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> TimeUnit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Try
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> assertArrayEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> exception
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> expression1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> expression2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> ext
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> fuse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> fused
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> fused2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> future2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> future2Res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> futureRes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> get
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> getMessage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> inj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> injector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> newFridgeSerialCode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> s
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> simpleMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> validatedByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> value
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> ||
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> ->
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> APIwithByteArrTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> ArrowAssoc
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> CountDownLatch
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Range
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> RichInt
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> U
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> arr2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> countDown
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> foreach
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> getBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> intWrapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> latch
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> obj4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> obj5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> obj6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> range
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> until
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> validatedByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> validatedByteArrayObj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> validatedByteArrayObj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> APIwithByteBufferTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> StringContext
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> allocate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> arr1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> br5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> bsonEvent1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> flip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> getBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> length
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ne
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> nio
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> obj4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> obj5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> s
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> validatedByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> validatedByteArrayObj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> validatedByteArrayObj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> validatedByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> validatedByteBufferObj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> validatedByteBufferObj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> App
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> BosonTester
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Failure
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Object
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> RuntimeException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Success
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Throwable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Try
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> _root_
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> arr222
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> arr444
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> bA
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> exception
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> f
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> m
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> obj111
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> obj333
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> obj555
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> v
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> validatedByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> validatedByteArray2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> value
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> BuffersTest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> U
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> allocate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> append
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> bosonFromJava
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> bosonFromScala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> collection
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> exampleBoson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> flip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> foreach
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> javaBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> length
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> materializeClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> mutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> nio
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> reflect
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> scalaBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> toArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> x$1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> x$2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> x$3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> x$4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> x$5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> x$6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Base64
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Decoder
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ExtractorTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Instant
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> List
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Long
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> None
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> T1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> T2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> T3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Tuple3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> arr2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> base64
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> bosonBson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> codec
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> collection
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> decode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> extract
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> finalBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> get
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> getMimeDecoder
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> globalObj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> handler
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> help
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> now
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> putNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> replaceAll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> time
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> toString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsExceptionWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> CharSequence
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> HorribleTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> None
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ParseResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> RuntimeException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Success
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> a1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> a2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> addNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> allocate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> arr1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> arr11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> arr111
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> arrEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> b1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> b2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> b3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> b4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> b5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bsonEvent1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> callParse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> get
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> getBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> getMessage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ne
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> nio
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> obj11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> out
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> parseAll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> resultParser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> run
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> toBson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> *
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> :+
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsBoson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsExceptionWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> CharSequence
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Error
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Failure
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> InjectorParserTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> List
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Long
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Nil
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> None
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ParseResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> RuntimeException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Success
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> T1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> T2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Throwable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Try
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> V1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> _obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> _obj4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> _root_
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> arr1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> arr2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> arr3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> arr4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bAux
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bAux1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> boson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonArrayEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonEvent1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonEventArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonEventArray1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonObjectRoot
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> callParse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> capacity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> collection
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> concat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> convert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> convertBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> decodeBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> decodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ex
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> exception
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> expression1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> f
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> finalResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> get
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> getMessage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> hasArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> injector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> l
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> m
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> msg
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> nb
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> newL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> newM
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> obj4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> obj5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> parseAll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> parseInj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> putNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> release
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> result1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> result2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> resultBoson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> resultParser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> resultValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> run
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> toBson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> v
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> validBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> value
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> InjectorsTest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> &&
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BsExceptionWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BsObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> CharSequence
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Error
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Failure
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> LanguageTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> None
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ParseResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> RuntimeException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Success
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> addNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arr1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arr2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arr3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arr4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arr5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> arrEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> callParse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> getMessage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> msg
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ne
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> obj4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> parseAll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> putNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> resultParser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> run
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> toBson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> ?0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BsExceptionWrites
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BsObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> BufferedSource
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> CharSequence
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Codec
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Integer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Iterator
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> JsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> LongInputTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> None
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> ParseResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> RuntimeException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Seq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Success
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> TinyLanguage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> URL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> Writes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> bsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> bufferedSource
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> callParse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> close
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> core
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> duplicate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> fallbackSystemCodec
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> finale
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> fromURL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getClass
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getInteger
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getLines
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getMessage
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getResource
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> interpreter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> json
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> parseAll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> parser
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> program
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> run
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> simpleMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> t
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> toBson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> toSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> value
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> vertx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> <repeated...>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> ?0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> After
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Before
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> BosonValidate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> JsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Matcher
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Matchers
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> MockResponse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> MockWebServer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Object
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> RequestSpecification
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Response
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> RestAssured
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Seq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> asString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> assertThat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> byteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> core
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> enqueue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> equalTo
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> get
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> getPort
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> given
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> hamcrest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> json
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> mockwebserver
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> okhttp3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> out
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> port
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> response
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> restassured
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> seq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> setBody
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> setHeader
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> shutdown
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> start
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> toString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> validate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> vertx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> webServer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> webServer_=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> when
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> ==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Range
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> ReturnTypes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> U
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> _bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> arr222
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> assertArrayEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> bA
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> books
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> byteArrValid
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> edition1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> edition2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> edition3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> foreach
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> getBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> hat1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> hat2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> hat3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> hats
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> i
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> indices
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> ne
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> obj111
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> obj333
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> obj555
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> obj666
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> sEditions1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> sEditions2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> sEditions3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> store
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> title1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> title2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> title3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Book
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Book1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Book2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Book3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BsSeq
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Event
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Float
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Hat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Hat1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Hat2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Hat3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> SEdition1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> SEdition2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> SEdition3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> SpecialEditions1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> SpecialEditions2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> SpecialEditions3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Store
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> StringContext
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> T1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> T2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Try
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> V1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Book
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Book1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Book2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Book3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Hat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Hat1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Hat2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Hat3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _SEdition1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _SEdition2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _SEdition3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _SpecialEditions1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _SpecialEditions2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _SpecialEditions3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> _Store
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> a
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b10
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b8
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> b9
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bAux
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bAux1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bAux2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> boson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> br5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArray31
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArray32
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArray33
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArrayEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArrayEvent1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArrayLvl21
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonArrayLvl22
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonObjectLvl11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonObjectLvl12
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonObjectLvl31
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonObjectLvl32
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonObjectLvl33
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonObjectRoot
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> capacity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> decodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> expression1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> finalResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> get
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> getBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> hasArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> injector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> injectorAPITests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> m
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> midResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ne
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> newM
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> out
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> release
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> s
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> validBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> validatedByteArr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> value
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> *
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> :+
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ArrExpr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Float
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Instant
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> List
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Long
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> None
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Some
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Statement
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> T1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> T2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> V1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> _$4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> _$7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> _root_
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> addNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> arrayBooks
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> arrayBooksx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> arrayx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b10
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b10x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b11x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b4x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b5x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b6x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b7x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b8
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b8x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b9
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> b9x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bA
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bA1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bA1lvl2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bAlvl2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bO
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bO1lvl2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bO1lvl3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bOlvl2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bOlvl3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> book4x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bookTypeA
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bookTypeAx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bookTypeB
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bookTypeBx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> books
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> books1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> books1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> books2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> books2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> booksx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bosonEx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bosonI
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bosonRes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br4x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> br5x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bs
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bson1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bson2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bson2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonA
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonA1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonEventx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonPath
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonevent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsoneventx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> bsonx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> capacity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> collection
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> concat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> db
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> decodeBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> decodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> edition4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> f
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> futureEx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hasArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hat1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hat1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hat2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hat2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hat3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hat3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hats
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hatsx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> injFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> injector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ins
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> instant
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> jpPlusPlusInjectorTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> l
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> lastBooks
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> lastBooksx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> length
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> list
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> m
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> map1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> materializeClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> modifyArrayEnd
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> newL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> newList
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> newM
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> now
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> ofRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> out
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> p
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> plusMillis
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> putNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> refArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> reflect
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> release
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> reverse
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> root
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> rootx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sEditions1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sEditions1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sEditions2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sEditions2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sEditions3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sEditions3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sector1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sector1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sector2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sector2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sectors
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> sectorsx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> store
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> store1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> store1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> store2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> store3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> store3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> storex
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> str
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> time
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> title1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> title1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> title2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> title2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> title3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> title3x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> toString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> typeAList
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> typeAListx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> typeBList
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> typeBListx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> typeCListx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> typeDListx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> unary_!
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> validatedByteArr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> validatedByteArrx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value00
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value00x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value01
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value01x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value10
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value10x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value11x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value20
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value20x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value21
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value21x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value30
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value30x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value31
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> value31x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> $org_scalatest_assert_macro_expr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> $org_scalatest_assert_macro_left
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> $org_scalatest_assert_macro_right
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> &&
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> +:
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> :+
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ===
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> A1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Assertion
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> AssertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> CanBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Coll
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Dictionary
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Equality
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Equalizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> GenIterable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> List
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Prettifier
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> StringContext
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> T1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> T2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> That
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> V1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> V_NULL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> WrappedArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _$4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _$7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b10
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b8
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _b9
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _br5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> _bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> addNull
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr222
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr444
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> arr5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> assertArrayEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> assertEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> assertTrue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> assertionsHelper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b10
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b8
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> b9
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> binaryMacroBool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bosonE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bosonI
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> br1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> br2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> br3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> br4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> br5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bsonEvent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> canBuildFrom
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> capacity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> concat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> convertToEqualizer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> decodeBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> decodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> default
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> equals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> expected
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> field1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> field1x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> field2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> field2x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> forall
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> genericWrapArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> hasArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> help
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> injFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> injResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> injector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> jpPlusPlusTests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> l
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> m
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> macroAssert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> materializeClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ne
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> newL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> newM
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj111
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj22
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj333
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> obj555
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> ofRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> out
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> p
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> r
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> refArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> reflect
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> release
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> root
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> rootx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> s
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> sameElements
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> toString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> validatedByteArr
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> wrapByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb10
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb11
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb6
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb8
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xb9
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xbr1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xbr2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xbr3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xbr4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xbr5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xobj22
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xobj333
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> xobj555
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> zip
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> <byname>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ?0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> APItests
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ArrayBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Assert
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Await
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Awaitable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BosonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BsValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BsonFactory
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ByteArrayOutputStream
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ByteBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> CanAwait
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Class
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> CompletableFuture
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> FunSuite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Function
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Inf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Infinite
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JUnitRunner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JosonExtractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JosonInjector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonArraySerializer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonFactory
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonNode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonObjectSerializer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> JsonSerializer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Level
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Module
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ObjectMapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> OutputStream
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Position
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> ResourceLeakDetector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> RunWith
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> SimpleModule
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> T1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> T2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Tag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> V1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> Vector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> a
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> add
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> addSerializer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> assertArrayEquals
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> books
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> boson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> bson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> bson4jackson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> bsonValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> capacity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> com
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> complete
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> concurrent
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> core
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> databind
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> de
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> decodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> duration
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> edition1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> edition2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> edition3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> encode
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> encodeToBarray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> expression
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> extractor
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> fasterxml
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> flush
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> future
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> future1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> getByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> go
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> hasArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> hat1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> hat2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> hat3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> hats
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> head
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> here
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> in
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> injector
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> jackson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> join
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> joson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> joson1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> json
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> json1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> junit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> m
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> midResult
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> midResult1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> module
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> newM
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> org
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> os
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> println
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> readTree
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> registerModule
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> release
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> result
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> result1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> runner
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> s
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> sEditions1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> sEditions2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> sEditions3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> scalactic
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> scalatest
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> setLevel
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> source
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> store
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> test
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> title1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> title2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> title3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> toByteArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> toString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> undercouch
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> validBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> vertx
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> writeValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> x
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> !=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> $conforms
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> +
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> -
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> <
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> <:<
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> <init>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> <repeated...>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> <repeated>
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ?0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> A
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> AnyRef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> AsScala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> B
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Boolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> BsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> BsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Byte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ByteBuf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> CharSequence
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Consumer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> CustomException
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_ARRAYB_INST_STR_ENUM_CHRSEQ
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_BOOLEAN
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_BSONARRAY
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_BSONOBJECT
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_FLOAT_DOUBLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_INT
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_LONG
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> D_NULL
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Decorators
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Dictionary
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Double
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Entry
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Float
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Function1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Instant
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> JavaConverters
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> List
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ListBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Long
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> MatchError
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Nothing
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Object
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Option
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Ordering
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Predef
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Range
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> RichInt
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Set
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> String
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> T
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> T0
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> TreeMap
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Tuple2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> U
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Unit
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> Unpooled
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> _
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> _$1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> _1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> _2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> any
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> append
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> apply
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> array
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> asInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> asScala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> asScalaBufferConverter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> b
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bool
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> boson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bson
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bsonImpl
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bsonLib
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bsonList
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bsonMap
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bsonSize
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> buf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> buf1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> buf2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> bufSize
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> buffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> byteArrayOps
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> capacity
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> collection
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> concat
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> convertBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> convertBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> copiedBuffer
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> dataType
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> decodeBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> decodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> duplicate
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> e
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> elem
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> encodeBsonArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> encodeBsonObject
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> entries
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> entry
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> entrySet
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> forEach
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> foreach
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getAllTypes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getIntLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getKey
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getList
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getMap
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> getValue
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> hasArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> i
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> immutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> int
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> intWrapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> io
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> isEmpty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> isInstanceOf
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> java
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> key
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> length
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> list
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> long
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> map
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> mapAsScalaMapConverter
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> mapper
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> materializeClassTag
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> math
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> mutable
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> netty
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> num
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> numElems
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> number
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ofByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> package
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> put
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readBoolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readDoubleLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readIntLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readLongLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readRetainedSlice
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> readerIndex
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> reflect
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> release
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> res
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> scala
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> size
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> smth
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> startIndex
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> str
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> strKey
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> t
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> tab
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> tabs
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> time
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toArray
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toDouble
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toInt
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toList
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toMap
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toSet
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> toString
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> until
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> util
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> value
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> while$1
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> while$2
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> while$3
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> while$4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> while$5
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeBoolean
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeByte
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeBytes
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeDoubleLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeIntLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeLongLE
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writeZero
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> writerIndex
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> zink
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> ||
product stamps:
38 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/Lib$.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/Lib.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceAPI$.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceAPI$delayedInit$body.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceAPI.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceTests$.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceTests$delayedInit$body.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/benchmark/PerformanceTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson$1.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson$BsonArraySerializer.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson$BsonObjectSerializer.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/Bson.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonArray$Iter.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonArray.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonObject$Entry.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonObject$Iter.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/bsonLib/BsonObject.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/APIFuse.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/APIwithByteArrTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/APIwithByteBufferTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BosonTester$.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BosonTester$delayedInit$body.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BosonTester.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/BuffersTest.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/ExtractorTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/HorribleTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/InjectorParserTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/InjectorsTest.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/LanguageTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/LongInputTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/RestAssured.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/ReturnTypes.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/injectorAPITests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/jpPlusPlusInjectorTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/boson/jpPlusPlusTests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/io/zink/joson/APItests.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/mapper/Mapper$.class -> lastModified(1525938517000)
/Users/Nige/ZinkWorkspace/boson/boson-scala/target/test-classes/mapper/Mapper.class -> lastModified(1525938517000)
source stamps:
22 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> hash(110799de73c71eec9f174df598573ea60e8e8c54)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> hash(684196f64d971f6fe999abd073f0b856eebd0bfb)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> hash(1dff13d7ddebf1f6cb7baf668fdcaefbc4ab75b8)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> hash(0ee25c606f1f004bc6ee623fce745fce4f821ba2)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> hash(06a70b1e2a6c7380d8cc72c4471d8addb07b51af)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> hash(fbabe92469f5ebe6612a76b9d02120f334da1a33)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> hash(3c1e7cc9ddb8fc610af8b6fefc01ddd03e7f0c9b)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> hash(c9511c1476cd7fc33a80667e030131f6582b4298)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> hash(97ab3f70335d545f174ae1af600994e54e3e6f44)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> hash(45e207d772433ce94ef8ab0ea5157a2a3a237a53)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> hash(bcf2a1e405d2b3d107e6cb26eb8ff6db7917f126)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> hash(32e36438a18561335a3575c7cabe3aa1f824caf0)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> hash(11720c16405dffdc52c42f03b9f3bd49cf0a7997)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> hash(c30dd08e58786773c2e50cb8746120dc3de422fd)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> hash(df6343298a2b1886650e232a0d66629f6cd1d4cf)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> hash(f2bf90efa24301e51792d9307d10e030d8a42fae)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> hash(f57fffcb9d73e1bb7954eb119822e96f2a447dfd)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> hash(a8eb5332f72de5ac215c355b4fe9b2b922737ad1)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> hash(d17254df33fa3d1d101274becb9ec05ac63d13e7)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> hash(2bb84a477423def431fe2a5284344830b1fc13e0)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> hash(9f4f201fae2c99360b656e1e042f44fcb93098e7)
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> hash(3a6f91fb847aafa75c0caad1ad9c1e25539b8594)
binary stamps:
17 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1410998958000)
/Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.0.jar -> lastModified(1501387414000)
/Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.9.0.jar -> lastModified(1501388548000)
/Users/Nige/.ivy2/cache/com.jayway.jsonpath/json-path/jars/json-path-2.4.0.jar -> lastModified(1499243765000)
/Users/Nige/.ivy2/cache/com.squareup.okhttp3/mockwebserver/jars/mockwebserver-3.9.1.jar -> lastModified(1511034008000)
/Users/Nige/.ivy2/cache/com.storm-enroute/scalameter-core_2.12/jars/scalameter-core_2.12-0.8.2.jar -> lastModified(1478762607000)
/Users/Nige/.ivy2/cache/de.undercouch/bson4jackson/jars/bson4jackson-2.7.0.jar -> lastModified(1453787447000)
/Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar -> lastModified(1519223247000)
/Users/Nige/.ivy2/cache/io.rest-assured/rest-assured/jars/rest-assured-3.0.6.jar -> lastModified(1511415569000)
/Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar -> lastModified(1508248152000)
/Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar -> lastModified(1417709863000)
/Users/Nige/.ivy2/cache/org.hamcrest/hamcrest-core/jars/hamcrest-core-1.3.jar -> lastModified(1341868082000)
/Users/Nige/.ivy2/cache/org.hamcrest/hamcrest-library/jars/hamcrest-library-1.3.jar -> lastModified(1341868137000)
/Users/Nige/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar -> lastModified(1477696245000)
/Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar -> lastModified(1500979666000)
/Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar -> lastModified(1492680537000)
/Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar -> lastModified(1492680712000)
class names:
17 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object
/Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.0.jar -> com.fasterxml.jackson.core.JsonGenerator
/Users/Nige/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.9.0.jar -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable
/Users/Nige/.ivy2/cache/com.jayway.jsonpath/json-path/jars/json-path-2.4.0.jar -> com.jayway.jsonpath.Configuration
/Users/Nige/.ivy2/cache/com.squareup.okhttp3/mockwebserver/jars/mockwebserver-3.9.1.jar -> okhttp3.mockwebserver.MockWebServer
/Users/Nige/.ivy2/cache/com.storm-enroute/scalameter-core_2.12/jars/scalameter-core_2.12-0.8.2.jar -> org.scalameter.Key$
/Users/Nige/.ivy2/cache/de.undercouch/bson4jackson/jars/bson4jackson-2.7.0.jar -> de.undercouch.bson4jackson.BsonFactory
/Users/Nige/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.22.Final.jar -> io.netty.buffer.Unpooled
/Users/Nige/.ivy2/cache/io.rest-assured/rest-assured/jars/rest-assured-3.0.6.jar -> io.restassured.RestAssured
/Users/Nige/.ivy2/cache/io.vertx/vertx-core/jars/vertx-core-3.5.0.jar -> io.vertx.core.VertxException
/Users/Nige/.ivy2/cache/junit/junit/jars/junit-4.12.jar -> org.junit.runner.RunWith
/Users/Nige/.ivy2/cache/org.hamcrest/hamcrest-core/jars/hamcrest-core-1.3.jar -> org.hamcrest.Matcher
/Users/Nige/.ivy2/cache/org.hamcrest/hamcrest-library/jars/hamcrest-library-1.3.jar -> org.hamcrest.Matchers
/Users/Nige/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar -> scala.util.parsing.combinator.Parsers
/Users/Nige/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar -> scala.math.Ordering$
/Users/Nige/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.3.jar -> org.scalactic.source.Position
/Users/Nige/.ivy2/cache/org.scalatest/scalatest_2.12/jars/scalatest_2.12-3.0.3.jar -> org.scalatest.FunSuite
internal apis:
22 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwDfmuOwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAOc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwMBIXWnQABm5vdGlmeXNxAH4ADKigu1t0AAZlbmNvZGVzcQB+AAyMI5hWdAAEd2FpdHNxAH4ADAtL5Ah0AAZtYXBwZXJzcQB+AAymSkQndAAGZXF1YWxzc3EAfgAMwzO0gHQABEJzb25zcQB+AAx5/V8sdAAMY2hlY2tBbmRDb3B5c3EAfgAM4c31J3QACW5vdGlmeUFsbHNxAH4ADIwTM4J0AAY8aW5pdD5zcQB+AAyjt7c0dAAIdG9TdHJpbmdzcQB+AAw2Yl9fdAAIZ2V0Q2xhc3NzcQB+AAyXlEVddAALZGVjb2RlVmFsdWVzcQB+AAwzuua6dAAIYXNTdHJlYW1zcQB+AAxQxx6adAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgAzeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAMYnNvbkxpYi5Cc29udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEudGhyb3dzc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AExzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AM0wACWluaGVyaXRlZHEAfgAzTAAHcGFyZW50c3EAfgAzeHEAfgBRc3EAfgBMdXEAfgAuAAAAAHNxAH4ATHVxAH4ALgAAAABzcQB+AEx1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AFB0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AFBzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AGl0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AGpzcQB+ADBxAH4APXEAfgA/cQB+AEFxAH4AQnEAfgBEfnEAfgBFdAAGTW9kdWxldXEAfgBJAAAAAHNxAH4ATHEAfgBSc3EAfgBMc3EAfgBUc3EAfgBMdXEAfgAuAAAAAHNxAH4ATHVxAH4ALgAAAABzcQB+AEx1cQB+AFsAAAAAdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHYnNvbkxpYnNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0kFZMF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA/L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvdGVzdC1jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUEQeZ3nPHHuyfF031mFc+pg6OjFQ=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwmllBqgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwtwKfRHQABm5vdGlmeXNxAH4ADO+hXn10AAZlbmNvZGVzcQB+AAxJxFCBdAAEd2FpdHNxAH4ADH9cQ/V0AARzaXplc3EAfgAM0hp4PnQACmdldEluc3RhbnRzcQB+AAyWRuwcdAAGZXF1YWxzc3EAfgAMDGPLFXQAB2hhc051bGxzcQB+AAyDrJ5AdAAFY2xlYXJzcQB+AAzgIVhSdAAJZ2V0RG91Ymxlc3EAfgAM8H3r1nQABmFkZEFsbHNxAH4ADDovPTp0AAlnZXRTdHJpbmdzcQB+AAym0zGydAAHZm9yRWFjaHNxAH4ADOtu2M90AAdhZGROdWxsc3EAfgAMTMVaKnQACGl0ZXJhdG9yc3EAfgAM3Cj62nQADmVuY29kZVRvU3RyaW5nc3EAfgAMjgvDAHQACW5vdGlmeUFsbHNxAH4ADGmXmKR0AAxnZXRCc29uQXJyYXlzcQB+AAybVMNldAAGPGluaXQ+c3EAfgAMG1Fo73QABnJlbW92ZXNxAH4ADDtuGJF0AAhnZXRGbG9hdHNxAH4ADFT1TJZ0AAZhc0pzb25zcQB+AAyNC2C6dAALYXJyYXlFcXVhbHNzcQB+AAw/K8gJdAAGc3RyZWFtc3EAfgAMxoggNXQACUJzb25BcnJheXNxAH4ADAWghTl0AAt0b0pzb25BcnJheXNxAH4ADMOSe510AAdnZXRMaXN0c3EAfgAMKbv7jHQABGNvcHlzcQB+AAwpAgULdAAIdG9TdHJpbmdzcQB+AAwG5MhudAAKZ2V0Qm9vbGVhbnNxAH4ADN2ru490AAZhc0Jzb25zcQB+AAzVENo9dAAIZ2V0Q2xhc3NzcQB+AAxk2WSEdAAIZ2V0VmFsdWVzcQB+AAw4bKyvdAAOZW5jb2RlVG9CYXJyYXlzcQB+AAxJvcL+dAAIY29udGFpbnNzcQB+AAxcjcppdAAHaXNFbXB0eXNxAH4ADJGOQlR0AANhZGRzcQB+AAwn6/qcdAANZ2V0QnNvbk9iamVjdHNxAH4ADIwrPZF0AAdnZXRMb25nc3EAfgAMjnq0kXQAC3NwbGl0ZXJhdG9yc3EAfgAM0B8X1HQACGhhc2hDb2Rlc3EAfgAMAFN2K3QACmdldEludGVnZXJzcQB+AAyb2xE7dAAJZ2V0QmluYXJ5c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Aa3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAEWJzb25MaWIuQnNvbkFycmF5dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEudGhyb3dzc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIRzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4Aa0wACWluaGVyaXRlZHEAfgBrTAAHcGFyZW50c3EAfgBreHEAfgCJc3EAfgCEdXEAfgBmAAAAAHNxAH4AhHVxAH4AZgAAAABzcQB+AIR1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AIh0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AIhzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AKF0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AKJzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AJZbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AIhzcQB+AJV0AAhJdGVyYWJsZXNxAH4AmXNxAH4AnHVxAH4AnwAAAANzcQB+AKF0AARqYXZhc3EAfgChdAAEbGFuZ3EAfgCodXEAfgCTAAAAAXNxAH4AlXQABk9iamVjdHNxAH4AmXNxAH4AnHVxAH4AnwAAAANzcQB+AKF0AARqYXZhc3EAfgChdAAEbGFuZ3EAfgCoc3EAfgBocQB+AHVxAH4Ad3EAfgB5cQB+AHpxAH4AfH5xAH4AfXQABk1vZHVsZXVxAH4AgQAAAABzcQB+AIRxAH4AinNxAH4AhHNxAH4AjHNxAH4AhHVxAH4AZgAAAABzcQB+AIR1cQB+AGYAAAAAc3EAfgCEdXEAfgCTAAAAAHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2Jzb25MaWJzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNJBWTBdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPy9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L3Rlc3QtY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFGhBlvZNlx9v6Zmr0HPwuFbuvQv7
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwejCAZAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwsH9uTnQABm5vdGlmeXNxAH4ADGSueSt0AAZlbmNvZGVzcQB+AAxCR3MpdAAEd2FpdHNxAH4ADPP1KrR0AARzaXplc3EAfgAMJjInpHQACmdldEluc3RhbnRzcQB+AAyIHbvsdAAHcHV0TnVsbHNxAH4ADAwkabN0AAZlcXVhbHNzcQB+AAzNjEPUdAAFY2xlYXJzcQB+AAx+T6RodAAKZmllbGROYW1lc3NxAH4ADJA7JOx0AAtjb250YWluc0tleXNxAH4ADDkv8zp0AAlnZXREb3VibGVzcQB+AAzseChkdAAMb2JqZWN0RXF1YWxzc3EAfgAMPFNi6nQACWdldFN0cmluZ3NxAH4ADJMA2Uh0AAx0b0pzb25PYmplY3RzcQB+AAw/f5iddAAHZm9yRWFjaHNxAH4ADE+t20J0AAhpdGVyYXRvcnNxAH4ADImBN710AAZnZXRNYXBzcQB+AAzAbiUQdAAOZW5jb2RlVG9TdHJpbmdzcQB+AAwHZij9dAAJbm90aWZ5QWxsc3EAfgAMZkLk+nQAB21lcmdlSW5zcQB+AAxJqxqpdAAMZ2V0QnNvbkFycmF5c3EAfgAMHlzulnQABjxpbml0PnNxAH4ADEK4rn10AAZyZW1vdmVzcQB+AAzetcM/dAAIZ2V0RmxvYXRzcQB+AAxMg5VbdAAGYXNKc29uc3EAfgAMd5tcqnQABnN0cmVhbXNxAH4ADEngOwd0AARjb3B5c3EAfgAMigSNmXQAA3B1dHNxAH4ADGcsst10AAh0b1N0cmluZ3NxAH4ADKBDECF0AApnZXRCb29sZWFuc3EAfgAMjm+S4HQABmFzQnNvbnNxAH4ADJjSNjd0AAhnZXRDbGFzc3NxAH4ADNsMLq50AAhnZXRWYWx1ZXNxAH4ADEh8kqN0AA5lbmNvZGVUb0JhcnJheXNxAH4ADHP/JOR0AAdpc0VtcHR5c3EAfgAM77QYEHQACkJzb25PYmplY3RzcQB+AAx5Y+U7dAANZ2V0QnNvbk9iamVjdHNxAH4ADLqxD/p0AAdnZXRMb25nc3EAfgAMRxEuAnQAC3NwbGl0ZXJhdG9yc3EAfgAMzVJ+3XQACGhhc2hDb2Rlc3EAfgAMXgZlk3QACmdldEludGVnZXJzcQB+AAwpcIO+dAAJZ2V0QmluYXJ5c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Aa3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAEmJzb25MaWIuQnNvbk9iamVjdHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQADHNjYWxhLnRocm93c3NyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCEc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGtMAAlpbmhlcml0ZWRxAH4Aa0wAB3BhcmVudHNxAH4Aa3hxAH4AiXNxAH4AhHVxAH4AZgAAAABzcQB+AIR1cQB+AGYAAAAAc3EAfgCEdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCIdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCIc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgChdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCic3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgCWWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgCIc3EAfgCVdAAISXRlcmFibGVzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChdAAEamF2YXNxAH4AoXQABGxhbmdxAH4AqHVxAH4AkwAAAAFzcQB+AKlzcQB+AJV0AAlNYXAkRW50cnlzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChdAAEamF2YXNxAH4AoXQABHV0aWxxAH4AqHVxAH4AkwAAAAJzcQB+AJV0AAZTdHJpbmdzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChdAAEamF2YXNxAH4AoXQABGxhbmdxAH4AqHNxAH4AlXQABk9iamVjdHNxAH4AmXNxAH4AnHVxAH4AnwAAAANzcQB+AKF0AARqYXZhc3EAfgChdAAEbGFuZ3EAfgCoc3EAfgBocQB+AHVxAH4Ad3EAfgB5cQB+AHpxAH4AfH5xAH4AfXQABk1vZHVsZXVxAH4AgQAAAABzcQB+AIRxAH4AinNxAH4AhHNxAH4AjHNxAH4AhHVxAH4AZgAAAABzcQB+AIR1cQB+AGYAAAAAc3EAfgCEdXEAfgCTAAAAAHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2Jzb25MaWJzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNJBWTBdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPy9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L3Rlc3QtY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFB3/E9fd6/H2y3uvZo/crvvEq3W4
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw6KB4vAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHDXT1j1dAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgAL0YPdf3QAEmNvbnZlcnRUb0VxdWFsaXplcnVxAH4ACQAAAHBzcQB+AAv96n27dAAGYXNzZXJ0c3EAfgALTk8o3nQAB3N1Y2NlZWRzcQB+AAs6i+jUdAAGbm90aWZ5c3EAfgAL4gc0PnQAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALp5zihHQAEEFzc2VydGlvbnNIZWxwZXJzcQB+AAugQQ0qdAAGY2FuY2Vsc3EAfgALyIUc/HQABHRlc3RzcQB+AAubVFz+dAARZXhlY3V0ZSRkZWZhdWx0JDJzcQB+AAvKgpQydAAJaW50ZXJjZXB0c3EAfgALdCFNvnQABGZhaWxzcQB+AAuMv5JDdAAEbmFtZXNxAH4AC9QUIxh0ABRhc3NlcnREb2VzTm90Q29tcGlsZXNxAH4AC5rNGIx0ABFleGVjdXRlJGRlZmF1bHQkNHNxAH4AC4rHJbF0AAdleGVjdXRlc3EAfgAL8jgaXnQABHdhaXRzcQB+AAth2CDTdAALdGVzdERhdGFGb3JzcQB+AAtNSWJqdAATY3JlYXRlQ2F0Y2hSZXBvcnRlcnNxAH4ACzeOMMR0AAlzdHlsZU5hbWVzcQB+AAtf7gO1dAAEb2JqMXNxAH4ACw4i5V10AA0kYXNJbnN0YW5jZU9mc3EAfgALInGyo3QAEWV4ZWN1dGUkZGVmYXVsdCQzc3EAfgALmTeXJHQAA2JyMXNxAH4AC9us9Rh0AAljb25maWdNYXBzcQB+AAuN/1NndAAGZXF1YWxzc3EAfgALHWPvHHQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnZlcnNpb25Db25zdHJhaW50c3EAfgALjNMqQ3QAD2RlZmF1bHRFcXVhbGl0eXNxAH4AC+MKOjl0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0FUb0JDb25zdHJhaW50c3EAfgALV+B1NnQABHRhZ3NzcQB+AAseexr5dAAMYXNJbnN0YW5jZU9mc3EAfgALROVQFHQABWFsZXJ0c3EAfgALSZWqCnQAA3J1bnNxAH4AC6RZ1Bt0AAZzY29wZXNzcQB+AAv6xjVRdAADcG9zc3EAfgALN9fttnQADHN5bmNocm9uaXplZHNxAH4AC4R+heR0AA5hc3NlcnRDb21waWxlc3NxAH4AC/aMxi10AAxhc3NlcnRUaHJvd3NzcQB+AAvfUjBCdAANJGlzSW5zdGFuY2VPZnNxAH4AC10kRhx0AAR0cmFwc3EAfgALfmVmXnQAFXRlc3REYXRhRm9yJGRlZmF1bHQkMnNxAH4AC8KEC5Z0AAxhc3NlcnRSZXN1bHRzcQB+AAu+Lc+DdAASdmFsaWRhdGVkQnl0ZUFycmF5c3EAfgALSDk6cHQABHRleHRzcQB+AAtS3QgRdAAsY29udmVydEVxdWl2YWxlbmNlVG9CVG9BQ29udmVyc2lvbkNvbnN0cmFpbnRzcQB+AAv396mNdAADYnIyc3EAfgALlpzA0HQAEWV4ZWN1dGUkZGVmYXVsdCQ3c3EAfgAL1J5CrHQAFXR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC1JI+3t0AAMhPT1zcQB+AAsu9m++dAAEaW5mb3NxAH4AC/E5hBV0AAlub3RpZnlBbGxzcQB+AAsf7tdRdAALd2l0aEZpeHR1cmVzcQB+AAtxNxsddAAHcnVuVGVzdHNxAH4AC7XQddF0AARvYmoyc3EAfgALFHLXtnQAE3ZhbGlkYXRlZEJ5dGVCdWZmZXJzcQB+AAut6XKndAAMaXNJbnN0YW5jZU9mc3EAfgALsfXiZXQACHdpdGhDbHVlc3EAfgALMH3YxnQAEGFzc2VydGlvbnNIZWxwZXJzcQB+AAt9FA/cdAARZXhlY3V0ZSRkZWZhdWx0JDZzcQB+AAu36FK2dAAPYXNzZXJ0VHlwZUVycm9yc3EAfgALYExZ5nQABm1hcmt1cHNxAH4AC6ydo4V0AAhsZWZ0U2lkZXNxAH4AC3LAwdp0AAY8aW5pdD5zcQB+AAvg1yjddAALbWFjcm9Bc3N1bWVzcQB+AAuwF/VadAAPcnVuTmVzdGVkU3VpdGVzc3EAfgALJl72VXQABWFwcGx5c3EAfgALfK3+qHQACUVxdWFsaXplcnNxAH4AC+etE+B0ABtuZXdBc3NlcnRpb25GYWlsZWRFeGNlcHRpb25zcQB+AAuHExP8dAAEbm90ZXNxAH4AC6+CUwN0AAI9PXNxAH4AC4QQ4/Z0AANicjNzcQB+AAs8B9FrdAAFY2xvbmVzcQB+AAtqoX7XdAAVdmFsaWRhdGVkQnl0ZUFycmF5T2Jqc3EAfgALdOL+1HQADG5lc3RlZFN1aXRlc3NxAH4ACybnRjJ0AANhcnJzcQB+AAsY/i9kdAAGYXNzdW1lc3EAfgAL0SXLQnQABiRpbml0JHNxAH4ACx2PfRF0ABZBUEl3aXRoQnl0ZUJ1ZmZlclRlc3Rzc3EAfgALnhuYenQAIGxvd1ByaW9yaXR5VHlwZUNoZWNrZWRDb25zdHJhaW50c3EAfgALe/dx33QABG9iajNzcQB+AAuICR69dAAMcmVnaXN0ZXJUZXN0c3EAfgALuL/z8nQAEWV4ZWN1dGUkZGVmYXVsdCQ1c3EAfgALvFOX/3QAAz09PXNxAH4ACwWBB8l0ABhuZXdUZXN0Q2FuY2VsZWRFeGNlcHRpb25zcQB+AAtTUQnrdAAIdG9TdHJpbmdzcQB+AAvzHMsydAAJdGVzdE5hbWVzc3EAfgAL8u8SiHQAD3llT2xkZVRlc3ROYW1lc3NxAH4AC5K0fq50ABFleGVjdXRlJGRlZmF1bHQkMXNxAH4AC82qRDd0AAIhPXNxAH4AC1pfVOh0AAhnZXRDbGFzc3NxAH4AC5JlLDZ0ABNyZWdpc3Rlcklnbm9yZWRUZXN0c3EAfgALy2RThnQACHRlc3RzRm9yc3EAfgALxbUNSnQACHJ1blRlc3Rzc3EAfgALnUj+q3QAEXBlbmRpbmdVbnRpbEZpeGVkc3EAfgAL6obAfHQACWJzb25FdmVudHNxAH4AC2EYlI90ABFleHBlY3RlZFRlc3RDb3VudHNxAH4AC2Oh2jl0AAhyZXJ1bm5lcnNxAH4AC+Q0o0F0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb25zdHJhaW50c3EAfgALbNp+RHQAAm5lc3EAfgALA9cC0nQAFnZhbGlkYXRlZEJ5dGVCdWZmZXJPYmpzcQB+AAtH9I8NdAARQ2hlY2tpbmdFcXVhbGl6ZXJzcQB+AAtrhVV0dAAHcGVuZGluZ3NxAH4AC6RlJbt0AAZpZ25vcmVzcQB+AAtelUVVdAALbWFjcm9Bc3NlcnRzcQB+AAvxNF1EdAADYnI0c3EAfgALkpZRrHQAAmVxc3EAfgALmkArt3QAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgAL3WUJ63QACU5vQXJnVGVzdHNxAH4AC+3Atvx0AAIjI3NxAH4AC7WkRWJ0AAhmaW5hbGl6ZXNxAH4AC0x+wRh0ABtjb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAs2tgcxdAAIaGFzaENvZGVzcQB+AAuKB6S/dAAHc3VpdGVJZHNxAH4ACw1nLA90AAlzdWl0ZU5hbWVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgD7eHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAABc3IAFHhzYnRpLmFwaS5Bbm5vdGF0aW9u3g6BovZcCrICAAJbAAlhcmd1bWVudHN0AB9bTHhzYnRpL2FwaS9Bbm5vdGF0aW9uQXJndW1lbnQ7TAAEYmFzZXQAEEx4c2J0aS9hcGkvVHlwZTt4cHVyAB9bTHhzYnRpLmFwaS5Bbm5vdGF0aW9uQXJndW1lbnQ7UZ2mjzglD3gCAAB4cAAAAAFzcgAceHNidGkuYXBpLkFubm90YXRpb25Bcmd1bWVudNZFsdgDGxd8AgACTAAEbmFtZXEAfgAMTAAFdmFsdWVxAH4ADHhwdAAFdmFsdWV0AChjbGFzc09mW29yZy5zY2FsYXRlc3QuanVuaXQuSlVuaXRSdW5uZXJdc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgAMTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHQAB1J1bldpdGhzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+ARRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAARzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgAMeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAA29yZ3NxAH4BIHQABWp1bml0c3EAfgEgdAAGcnVubmVyc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ASFzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACRpby56aW5rLmJvc29uLkFQSXdpdGhCeXRlQnVmZmVyVGVzdHN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAJ0ABBzY2FsYS5kZXByZWNhdGVkdAAnc2NhbGEucmVmbGVjdC5tYWNyb3MuaW50ZXJuYWwubWFjcm9JbXBsc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cQB+ARRzcQB+ATdzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4A+0wACWluaGVyaXRlZHEAfgD7TAAHcGFyZW50c3EAfgD7eHEAfgEVc3EAfgE3dXEAfgD2AAAAAHNxAH4BN3VxAH4A9gAAAABzcQB+ATd1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAEHNxAH4BEnQACEZ1blN1aXRlc3EAfgEYc3EAfgEbdXEAfgEeAAAAA3NxAH4BIHQAA29yZ3NxAH4BIHQACXNjYWxhdGVzdHEAfgEpc3EAfgESdAAMRnVuU3VpdGVMaWtlcQB+AUhzcQB+ARJ0AAtEb2N1bWVudGluZ3EAfgFIc3EAfgESdAAIQWxlcnRpbmdxAH4BSHNxAH4BEnQACU5vdGlmeWluZ3EAfgFIc3EAfgESdAAJSW5mb3JtaW5ncQB+AUhzcQB+ARJ0ABBUZXN0UmVnaXN0cmF0aW9ucQB+AUhzcQB+ARJ0AAlUZXN0U3VpdGVxAH4BSHNxAH4BEnQABVN1aXRlcQB+AUhzcQB+ARJ0AAxTZXJpYWxpemFibGVzcQB+ARhzcQB+ARt1cQB+AR4AAAACc3EAfgEgdAAFc2NhbGFxAH4BKXNxAH4BEnEAfgFgc3EAfgEYc3EAfgEbdXEAfgEeAAAAA3NxAH4BIHQABGphdmFzcQB+ASB0AAJpb3EAfgEpc3EAfgESdAAKQXNzZXJ0aW9uc3EAfgFIc3EAfgESdAAMVHJpcGxlRXF1YWxzc3EAfgEYc3EAfgEbdXEAfgEeAAAAA3NxAH4BIHQAA29yZ3NxAH4BIHQACXNjYWxhY3RpY3EAfgEpc3EAfgESdAATVHJpcGxlRXF1YWxzU3VwcG9ydHEAfgFyc3EAfgESdAAGT2JqZWN0c3EAfgEYc3EAfgEbdXEAfgEeAAAAA3NxAH4BIHEAfgFrc3EAfgEgdAAEbGFuZ3EAfgEpc3EAfgESdAADQW55cQB+AWF1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAA3NyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0AAdpby56aW5rc3EAfgGHdAACaW9zcQB+AYd0AA1pby56aW5rLmJvc29uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjSQVkwXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0AD8vVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLXNjYWxhL3RhcmdldC90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQ8HnzJ3bj8YQr4tv78Ad3QPn8Mmw==
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwteGRVwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAArc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwkoxKJXQABm5vdGlmeXNxAH4ADBKJhix0AAJiQXNxAH4ADGKbM6F0AAR3YWl0c3EAfgAMPqKJyHQABG9iajFzcQB+AAwUN45zdAANJGFzSW5zdGFuY2VPZnNxAH4ADAI012V0AAZmdXR1cmVzcQB+AAwJPDOBdAAGZXF1YWxzc3EAfgAM6OtOxHQABmFycjIyMnNxAH4ADFyKIfB0AAZvYmozMzNzcQB+AAwzT0/ydAAMYXNJbnN0YW5jZU9mc3EAfgAMApv40HQADmV4ZWN1dGlvblN0YXJ0c3EAfgAMEdEX8XQADHN5bmNocm9uaXplZHNxAH4ADOavt3h0AA0kaXNJbnN0YW5jZU9mc3EAfgAM5+rM03QAEnZhbGlkYXRlZEJ5dGVBcnJheXNxAH4ADOAu5jd0AARtYWluc3EAfgAMwLcjC3QACW5vdGlmeUFsbHNxAH4ADJ4T0QN0AAZ0ZXN0ZXJzcQB+AAyNB9AWdAAEb2JqMnNxAH4ADAsd7M10AAxpc0luc3RhbmNlT2ZzcQB+AAyr5+zAdAALQm9zb25UZXN0ZXJzcQB+AAxdi1NOdAAEYnNvbnNxAH4ADGe8oUd0AAZhcnI0NDRzcQB+AAzCk5FndAAKZXhwcmVzc2lvbnNxAH4ADFIK96p0AAI9PXNxAH4ADPioWsx0AAZvYmoxMTFzcQB+AAz347CudAAFY2xvbmVzcQB+AAzSIDnmdAADYXJyc3EAfgAMsfYdP3QABiRpbml0JHNxAH4ADK3eOpJ0AAZvYmo1NTVzcQB+AAwhRr3EdAAEb2JqM3NxAH4ADO79dsl0AAh0b1N0cmluZ3NxAH4ADEfKjjV0AARhcmdzc3EAfgAM0VsSUHQAAiE9c3EAfgAMUugctnQABWJvc29uc3EAfgAMHOrXhXQACGdldENsYXNzc3EAfgAM0wH7oHQACWJzb25FdmVudHNxAH4ADKt66uh0AAJuZXNxAH4ADFmmux90AAJlcXNxAH4ADKK/bxN0ABN2YWxpZGF0ZWRCeXRlQXJyYXkyc3EAfgAMSSvJAHQAC2RlbGF5ZWRJbml0c3EAfgAMlBkLrXQAAiMjc3EAfgAM95jXNHQACGZpbmFsaXplc3EAfgAMIO9FhnQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AbXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAGWlvLnppbmsuYm9zb24uQm9zb25UZXN0ZXJ1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAac2NhbGEuZGVwcmVjYXRlZE92ZXJyaWRpbmd0ABBzY2FsYS5kZXByZWNhdGVkc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIdzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AbUwACWluaGVyaXRlZHEAfgBtTAAHcGFyZW50c3EAfgBteHEAfgCMc3EAfgCHdXEAfgBoAAAAAHNxAH4Ah3VxAH4AaAAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4AbnEAfgB3dXEAfgB4AAAAAXNyABR4c2J0aS5hcGkuQW5ub3RhdGlvbt4OgaL2XAqyAgACWwAJYXJndW1lbnRzdAAfW0x4c2J0aS9hcGkvQW5ub3RhdGlvbkFyZ3VtZW50O0wABGJhc2VxAH4AlnhwdXIAH1tMeHNidGkuYXBpLkFubm90YXRpb25Bcmd1bWVudDtRnaaPOCUPeAIAAHhwAAAAAXNyABx4c2J0aS5hcGkuQW5ub3RhdGlvbkFyZ3VtZW501kWx2AMbF3wCAAJMAARuYW1lcQB+AA1MAAV2YWx1ZXEAfgANeHB0AAB0ACooIm1haW4gc2hvdWxkIG5vdCBiZSBvdmVycmlkZGVuIiwiMi4xMS4wIilzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCLdAAUZGVwcmVjYXRlZE92ZXJyaWRpbmdzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AItzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ALBzcQB+AHoAcQB+ACt1cQB+AH0AAAAAc3EAfgCjdAAEVW5pdHEAfgCpdXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AlnhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AgHQABVBsYWlucQB+AE1zcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AKRbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AItzcQB+AKN0AAVBcnJheXEAfgCpdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AKN0AAZTdHJpbmdzcQB+AKdzcQB+AKp1cQB+AK0AAAADc3EAfgCvdAAEamF2YXNxAH4Ar3QABGxhbmdxAH4AtHNxAH4Ah3VxAH4AywAAAARzcQB+AKN0AANBcHBxAH4AqXNxAH4Ao3QAC0RlbGF5ZWRJbml0cQB+AKlzcQB+AKN0AAZPYmplY3RxAH4Az3NxAH4Ao3QAA0FueXEAfgCpdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHaW8uemlua3NxAH4A4nQAAmlvc3EAfgDidAANaW8uemluay5ib3NvbnNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0kFZMF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA/L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvdGVzdC1jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUyVEcFHbNf8M6gGZ+AwEx9lgrQpg=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw2XEJRgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw3Pb3CXQABm5vdGlmeXNxAH4ADMFrOY50AAR3YWl0c3EAfgAMnoRma3QAG01vY2sgd2ViIHNlcnZlciBpcyBzaHV0ZG93bnNxAH4ADDbKfbh0AARvYmoxc3EAfgAMy5Kw1HQADSRhc0luc3RhbmNlT2ZzcQB+AAwRyR2hdAADYnIxc3EAfgAMFGiTq3QABmVxdWFsc3NxAH4ADCA+XGh0AAxhc0luc3RhbmNlT2ZzcQB+AAxcHA7TdAAMc3luY2hyb25pemVkc3EAfgAMeFPdonQADSRpc0luc3RhbmNlT2ZzcQB+AAx5TlVGdAAeTW9jayB3ZWIgc2VydmVyIGlzIGluaXRpYWxpemVkc3EAfgAM8b4GonQAA2JyMnNxAH4ADLCvJBx0ACB0cnlpbmcgb3V0IHJlc3QgYXNzdXJlZCBpbiBzY2FsYXNxAH4ADE7TTH90AAlub3RpZnlBbGxzcQB+AAyBpQ2HdAAEb2JqMnNxAH4ADGk/8u10AAxpc0luc3RhbmNlT2ZzcQB+AAxeezTRdAAGPGluaXQ+c3EAfgAMtV062HQAAj09c3EAfgAMH3uxLnQAA2JyM3NxAH4ADL2vtlh0AAVjbG9uZXNxAH4ADIgm4q10AANhcnJzcQB+AAypv3cGdAAEb2JqM3NxAH4ADENBfm50AAh0b1N0cmluZ3NxAH4ADH3yx3h0AAIhPXNxAH4ADJP7Bkd0AAtSZXN0QXNzdXJlZHNxAH4ADMB0x0F0AAhnZXRDbGFzc3NxAH4ADAgkkkF0AAlic29uRXZlbnRzcQB+AAw22NEEdAACbmVzcQB+AAySOpdAdAAJd2ViU2VydmVyc3EAfgAMUXQBfnQAA2JyNHNxAH4ADM4eOcp0AAJlcXNxAH4ADLrt9D90AAIjI3NxAH4ADHvrbj50AAhmaW5hbGl6ZXNxAH4ADJRuh+x0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABlpby56aW5rLmJvc29uLlJlc3RBc3N1cmVkdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAADdAAQb3JnLmp1bml0LkJlZm9yZXQAD29yZy5qdW5pdC5BZnRlcnQADm9yZy5qdW5pdC5UZXN0c3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AHZzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AW0wACWluaGVyaXRlZHEAfgBbTAAHcGFyZW50c3EAfgBbeHEAfgB7c3EAfgB2dXEAfgBWAAAAAHNxAH4AdnVxAH4AVgAAAABzcQB+AHZ1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHp0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AHpzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AJN0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJRzcQB+AId0AANBbnlzcQB+AItzcQB+AI51cQB+AJEAAAACc3EAfgCTdAAFc2NhbGFxAH4AmnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AKR0AAJpb3NxAH4ApHQADWlvLnppbmsuYm9zb25zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNJBWTBdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPy9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L3Rlc3QtY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFPK/kO+iQwHlF5LZMH0Q4DDYpC+u
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> 

/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwCZwKpgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAcc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwGQbom3QABm5vdGlmeXNxAH4ADBGO59N0AAZlbmNvZGVzcQB+AAxJeCf4dAAVZ2V0QWxsVHlwZXMkZGVmYXVsdCQyc3EAfgAMLb0OLnQABHdhaXRzcQB+AAzfn+UMdAANJGFzSW5zdGFuY2VPZnNxAH4ADBjaYlt0ABBkZWNvZGVCc29uT2JqZWN0c3EAfgAMDpcuIHQABmVxdWFsc3NxAH4ADJzPaBN0AAtnZXRBbGxUeXBlc3NxAH4ADHuZ5EN0AA9kZWNvZGVCc29uQXJyYXlzcQB+AAzw237UdAAMYXNJbnN0YW5jZU9mc3EAfgAMSPTmcHQADHN5bmNocm9uaXplZHNxAH4ADGsTL/l0AA0kaXNJbnN0YW5jZU9mc3EAfgAMlPiTtnQABk1hcHBlcnNxAH4ADKL4tLR0AAlub3RpZnlBbGxzcQB+AAzd7oJsdAAMaXNJbnN0YW5jZU9mc3EAfgAM6JNzkHQAEWNvbnZlcnRCc29uT2JqZWN0c3EAfgAMdO1wE3QAAj09c3EAfgAMaf6c1HQABWNsb25lc3EAfgAMPSbeinQACHRvU3RyaW5nc3EAfgAMuq9xwHQAAiE9c3EAfgAMx/UK6nQACGdldENsYXNzc3EAfgAMT3lXkXQAAm5lc3EAfgAMiZOw+nQAEGNvbnZlcnRCc29uQXJyYXlzcQB+AAxbTeWVdAACZXFzcQB+AAxgvxjbdAAHY29udmVydHNxAH4ADFivPQh0AAIjI3NxAH4ADPawwAh0AAhmaW5hbGl6ZXNxAH4ADO5SPFl0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AE94cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0AA1tYXBwZXIuTWFwcGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBnc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AE9MAAlpbmhlcml0ZWRxAH4AT0wAB3BhcmVudHNxAH4AT3hxAH4AbHNxAH4AZ3VxAH4ASgAAAABzcQB+AGd1cQB+AEoAAAAAc3EAfgBndXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBrdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBrc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCEdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCFc3EAfgB4dAADQW55c3EAfgB8c3EAfgB/dXEAfgCCAAAAAnNxAH4AhHQABXNjYWxhcQB+AIt1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAZtYXBwZXJzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNJBWTBdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPy9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L3Rlc3QtY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDpvkfuEeq+nXAyq0a2cHiVTm4WU
external apis:
32 items
io.zink.boson.Boson -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwx4zqNAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAZc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwNzp9hnQABm5vdGlmeXNxAH4ADK7M2Zp0AAVCb3NvbnNxAH4ADLx/D3B0AAR3YWl0c3EAfgAMGdR9IHQADSRhc0luc3RhbmNlT2ZzcQB+AAyZoKUEdAAGZXF1YWxzc3EAfgAMpxHhYnQADGFzSW5zdGFuY2VPZnNxAH4ADJO4Est0AAh2YWxpZGF0ZXNxAH4ADD24zTl0AAxzeW5jaHJvbml6ZWRzcQB+AAy/zA6QdAANJGlzSW5zdGFuY2VPZnNxAH4ADFM+dFl0AAlub3RpZnlBbGxzcQB+AAwdzx9idAAMaXNJbnN0YW5jZU9mc3EAfgAMU+AysHQACGluamVjdG9yc3EAfgAMv9tY7XQAAmdvc3EAfgAMJneq73QAAj09c3EAfgAM5ACl73QABWNsb25lc3EAfgAMWqYHw3QABGZ1c2VzcQB+AAyRnjWEdAAJZXh0cmFjdG9yc3EAfgAMcXlJDXQACHRvU3RyaW5nc3EAfgAMdK/gFHQAAiE9c3EAfgAM4OTJyXQACGdldENsYXNzc3EAfgAM2ugPWnQAAm5lc3EAfgAM9tlZcHQAAmVxc3EAfgAM+bOCK3QAAiMjc3EAfgAMXRO82nQACGZpbmFsaXplc3EAfgAMnhwY1XQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ASXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAE2lvLnppbmsuYm9zb24uQm9zb251cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ASUwACWluaGVyaXRlZHEAfgBJTAAHcGFyZW50c3EAfgBJeHEAfgBmc3EAfgBhdXEAfgBEAAAAAHNxAH4AYXVxAH4ARAAAAABzcQB+AGF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGV0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AH50AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH9zcQB+AHJ0AANBbnlzcQB+AHZzcQB+AHl1cQB+AHwAAAACc3EAfgB+dAAFc2NhbGFxAH4AhXNxAH4ARnEAfgBTdXEAfgBUAAAAAHNxAH4AVgF0ABNpby56aW5rLmJvc29uLkJvc29udXEAfgBZAAAAAH5xAH4AW3QABVRyYWl0dXEAfgBfAAAAAHNxAH4AYXEAfgBnc3EAfgBhc3EAfgBpc3EAfgBhdXEAfgBEAAAAAHNxAH4AYXVxAH4ARAAAAABzcQB+AGF1cQB+AHAAAAACc3EAfgBycQB+AHVzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+cQB+AIFzcQB+AH5xAH4Ag3EAfgCFc3EAfgBycQB+AIdzcQB+AHZzcQB+AHl1cQB+AHwAAAACc3EAfgB+cQB+AIxxAH4AhXVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AKt0AAJpb3NxAH4Aq3QADWlvLnppbmsuYm9zb25zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEwALxdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOi9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSC3IaZVtnoa2Wc3woBBPoxNmgGgw==
io.zink.boson.Boson$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwx4zqNAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAZc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwNzp9hnQABm5vdGlmeXNxAH4ADK7M2Zp0AAVCb3NvbnNxAH4ADLx/D3B0AAR3YWl0c3EAfgAMGdR9IHQADSRhc0luc3RhbmNlT2ZzcQB+AAyZoKUEdAAGZXF1YWxzc3EAfgAMpxHhYnQADGFzSW5zdGFuY2VPZnNxAH4ADJO4Est0AAh2YWxpZGF0ZXNxAH4ADD24zTl0AAxzeW5jaHJvbml6ZWRzcQB+AAy/zA6QdAANJGlzSW5zdGFuY2VPZnNxAH4ADFM+dFl0AAlub3RpZnlBbGxzcQB+AAwdzx9idAAMaXNJbnN0YW5jZU9mc3EAfgAMU+AysHQACGluamVjdG9yc3EAfgAMv9tY7XQAAmdvc3EAfgAMJneq73QAAj09c3EAfgAM5ACl73QABWNsb25lc3EAfgAMWqYHw3QABGZ1c2VzcQB+AAyRnjWEdAAJZXh0cmFjdG9yc3EAfgAMcXlJDXQACHRvU3RyaW5nc3EAfgAMdK/gFHQAAiE9c3EAfgAM4OTJyXQACGdldENsYXNzc3EAfgAM2ugPWnQAAm5lc3EAfgAM9tlZcHQAAmVxc3EAfgAM+bOCK3QAAiMjc3EAfgAMXRO82nQACGZpbmFsaXplc3EAfgAMnhwY1XQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ASXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAE2lvLnppbmsuYm9zb24uQm9zb251cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ASUwACWluaGVyaXRlZHEAfgBJTAAHcGFyZW50c3EAfgBJeHEAfgBmc3EAfgBhdXEAfgBEAAAAAHNxAH4AYXVxAH4ARAAAAABzcQB+AGF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGV0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AH50AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH9zcQB+AHJ0AANBbnlzcQB+AHZzcQB+AHl1cQB+AHwAAAACc3EAfgB+dAAFc2NhbGFxAH4AhXNxAH4ARnEAfgBTdXEAfgBUAAAAAHNxAH4AVgF0ABNpby56aW5rLmJvc29uLkJvc29udXEAfgBZAAAAAH5xAH4AW3QABVRyYWl0dXEAfgBfAAAAAHNxAH4AYXEAfgBnc3EAfgBhc3EAfgBpc3EAfgBhdXEAfgBEAAAAAHNxAH4AYXVxAH4ARAAAAABzcQB+AGF1cQB+AHAAAAACc3EAfgBycQB+AHVzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+cQB+AIFzcQB+AH5xAH4Ag3EAfgCFc3EAfgBycQB+AIdzcQB+AHZzcQB+AHl1cQB+AHwAAAACc3EAfgB+cQB+AIxxAH4AhXVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AKt0AAJpb3NxAH4Aq3QADWlvLnppbmsuYm9zb25zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEwALxdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOi9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSC3IaZVtnoa2Wc3woBBPoxNmgGgw==
io.zink.boson.bson.bsonImpl.BosonImpl -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwZMa57wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAABDc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwrtbtXnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDdzcQB+AAyOdqkFdAAGbm90aWZ5c3EAfgAMk340K3QAD3ByaW50U3RhY2tUcmFjZXNxAH4ADFcN30t0ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDVzcQB+AAwT+Dn0dAATZ2V0TG9jYWxpemVkTWVzc2FnZXNxAH4ADDtmeiR0AAR3YWl0c3EAfgAM3WoTU3QACW1vZGlmeUFsbHNxAH4ADG+MDFB0AA0kYXNJbnN0YW5jZU9mc3EAfgAMAYfamXQACWR1cGxpY2F0ZXNxAH4ADG6OD5N0ABlleGVjU3RhdGVtZW50UGF0dGVybk1hdGNoc3EAfgAMZ6t77XQADHByb2R1Y3RBcml0eXNxAH4ADHR+DhN0AARzbXRoc3EAfgAMIXpi5XQABmVxdWFsc3NxAH4ADFNkOAB0ABNtb2RpZnlBbGwkZGVmYXVsdCQ1c3EAfgAM3LE4MnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDhzcQB+AAypVsxedAAQZmlsbEluU3RhY2tUcmFjZXNxAH4ADE7dv550AAlpbml0Q2F1c2VzcQB+AAwseMsIdAAMYXNJbnN0YW5jZU9mc3EAfgAMz86ASnQAGG1vZGlmeUFycmF5RW5kJGRlZmF1bHQkNnNxAH4ADMiCcpd0AAxzeW5jaHJvbml6ZWRzcQB+AAyOJuQAdAAVbW9kaWZ5QXJyYXlFbmRXaXRoS2V5c3EAfgAMPw2UiXQADSRpc0luc3RhbmNlT2ZzcQB+AAxVss+BdAAIZ2V0Q2F1c2VzcQB+AAxVW84PdAAKZ2V0Qnl0ZUJ1ZnNxAH4ADDRUGC90AA5tb2RpZnlBcnJheUVuZHNxAH4ADEaKZIx0AAhjYW5FcXVhbHNxAH4ADJZtoQx0AA1wcm9kdWN0UHJlZml4c3EAfgAMFMBs03QACW5vdGlmeUFsbHNxAH4ADHLuWhJ0AAxpc0luc3RhbmNlT2ZzcQB+AAw6SBh5dAANZ2V0U3RhY2tUcmFjZXNxAH4ADHsFOr50ABRnZXRTdGFja1RyYWNlRWxlbWVudHNxAH4ADHVzT610AAVhcnJheXNxAH4ADOJSjI10AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ2c3EAfgAMzliCY3QABjxpbml0PnNxAH4ADH89wN50ABdtb2RpZnlIYXNFbGVtJGRlZmF1bHQkNnNxAH4ADJB96gB0AApnZXRNZXNzYWdlc3EAfgAMTqDFSnQACUJvc29uSW1wbHNxAH4ADDwOp410AA1zZXRTdGFja1RyYWNlc3EAfgAMb6OSFnQADWdldFN1cHByZXNzZWRzcQB+AAwIfwM9dAANbW9kaWZ5SGFzRWxlbXNxAH4ADFtUV2h0AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ5c3EAfgAMOPYT23QAAj09c3EAfgAMx5K8E3QAEmdldFN0YWNrVHJhY2VEZXB0aHNxAH4ADJcXtbR0AAVjbG9uZXNxAH4ADHYKHoJ0AA1hZGRTdXBwcmVzc2Vkc3EAfgAMRe8EBXQACmhhc0VsZW1lbnRzcQB+AAx+0CjxdAAGJGluaXQkc3EAfgAM7pEtLXQABGNvcHlzcQB+AAzGCfcxdAAYbW9kaWZ5QXJyYXlFbmQkZGVmYXVsdCQ3c3EAfgAMUu/Xi3QACHRvU3RyaW5nc3EAfgAMZohDX3QACmlzSGFsZndvcmRzcQB+AAyOlSCbdAACIT1zcQB+AAxdImcHdAAIZ2V0Q2xhc3NzcQB+AAxWWZ6PdAAOY29weSRkZWZhdWx0JDFzcQB+AAwrqG3kdAACbmVzcQB+AAwtqNW2dAAbZXhlY0FycmF5RnVuY3Rpb24kZGVmYXVsdCQ4c3EAfgAMc2pFhHQAAmVxc3EAfgAMnlmXKnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADFJXwPZ0AAIjI3NxAH4ADBEZWN50AAhmaW5hbGl6ZXNxAH4ADLwuYut0AAdleHRyYWN0c3EAfgAMCbUG+3QAEWV4ZWNBcnJheUZ1bmN0aW9uc3EAfgAMwfHTbHQAD0N1c3RvbUV4Y2VwdGlvbnNxAH4ADHXCRtN0AA5wcm9kdWN0RWxlbWVudHNxAH4ADAzmkC50ABFleGVjUm9vdEluamVjdGlvbnNxAH4ADO2S/Cx0AAhoYXNoQ29kZXNxAH4ADENZU290ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDhzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAraW8uemluay5ib3Nvbi5ic29uLmJzb25JbXBsLkN1c3RvbUV4Y2VwdGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgC1c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJ1MAAlpbmhlcml0ZWRxAH4AnUwAB3BhcmVudHNxAH4AnXhxAH4AunNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AJgAAAAAc3EAfgC1dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAhzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgC5dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgC5c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDTc3EAfgDGdAAHUHJvZHVjdHEAfgDMc3EAfgDGdAAGRXF1YWxzcQB+AMxzcQB+AMZ0AAlFeGNlcHRpb25zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDSdAAEamF2YXNxAH4A0nQABGxhbmdxAH4A13NxAH4AxnQACVRocm93YWJsZXEAfgDec3EAfgDGcQB+AMlzcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJ0AAJpb3EAfgDXc3EAfgDGdAAGT2JqZWN0cQB+AN5zcQB+AMZ0AANBbnlxAH4AzHNxAH4AmnEAfgCndXEAfgCoAAAAAHNxAH4AqgB0ACVpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGwuQm9zb25JbXBsdXEAfgCtAAAAAHEAfgCxdXEAfgCzAAAAAHNxAH4AtXEAfgC7c3EAfgC1c3EAfgC9c3EAfgC1dXEAfgCYAAAAAHNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AMQAAAACc3EAfgDGcQB+AO9zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJxAH4A5HEAfgDXc3EAfgDGcQB+APFzcQB+AMpzcQB+AM11cQB+ANAAAAACc3EAfgDScQB+ANVxAH4A13VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AQ50ABJpby56aW5rLmJvc29uLmJzb25zcQB+AQ50AAJpb3NxAH4BDnQADWlvLnppbmsuYm9zb25zcQB+AQ50ABtpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGxzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEv9VRdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tY29yZS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFCCKuFTvbPQUUUQruFiO9j8LHO2C
io.zink.boson.bson.bsonImpl.BosonImpl$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwZMa57wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAABDc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwrtbtXnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDdzcQB+AAyOdqkFdAAGbm90aWZ5c3EAfgAMk340K3QAD3ByaW50U3RhY2tUcmFjZXNxAH4ADFcN30t0ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDVzcQB+AAwT+Dn0dAATZ2V0TG9jYWxpemVkTWVzc2FnZXNxAH4ADDtmeiR0AAR3YWl0c3EAfgAM3WoTU3QACW1vZGlmeUFsbHNxAH4ADG+MDFB0AA0kYXNJbnN0YW5jZU9mc3EAfgAMAYfamXQACWR1cGxpY2F0ZXNxAH4ADG6OD5N0ABlleGVjU3RhdGVtZW50UGF0dGVybk1hdGNoc3EAfgAMZ6t77XQADHByb2R1Y3RBcml0eXNxAH4ADHR+DhN0AARzbXRoc3EAfgAMIXpi5XQABmVxdWFsc3NxAH4ADFNkOAB0ABNtb2RpZnlBbGwkZGVmYXVsdCQ1c3EAfgAM3LE4MnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDhzcQB+AAypVsxedAAQZmlsbEluU3RhY2tUcmFjZXNxAH4ADE7dv550AAlpbml0Q2F1c2VzcQB+AAwseMsIdAAMYXNJbnN0YW5jZU9mc3EAfgAMz86ASnQAGG1vZGlmeUFycmF5RW5kJGRlZmF1bHQkNnNxAH4ADMiCcpd0AAxzeW5jaHJvbml6ZWRzcQB+AAyOJuQAdAAVbW9kaWZ5QXJyYXlFbmRXaXRoS2V5c3EAfgAMPw2UiXQADSRpc0luc3RhbmNlT2ZzcQB+AAxVss+BdAAIZ2V0Q2F1c2VzcQB+AAxVW84PdAAKZ2V0Qnl0ZUJ1ZnNxAH4ADDRUGC90AA5tb2RpZnlBcnJheUVuZHNxAH4ADEaKZIx0AAhjYW5FcXVhbHNxAH4ADJZtoQx0AA1wcm9kdWN0UHJlZml4c3EAfgAMFMBs03QACW5vdGlmeUFsbHNxAH4ADHLuWhJ0AAxpc0luc3RhbmNlT2ZzcQB+AAw6SBh5dAANZ2V0U3RhY2tUcmFjZXNxAH4ADHsFOr50ABRnZXRTdGFja1RyYWNlRWxlbWVudHNxAH4ADHVzT610AAVhcnJheXNxAH4ADOJSjI10AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ2c3EAfgAMzliCY3QABjxpbml0PnNxAH4ADH89wN50ABdtb2RpZnlIYXNFbGVtJGRlZmF1bHQkNnNxAH4ADJB96gB0AApnZXRNZXNzYWdlc3EAfgAMTqDFSnQACUJvc29uSW1wbHNxAH4ADDwOp410AA1zZXRTdGFja1RyYWNlc3EAfgAMb6OSFnQADWdldFN1cHByZXNzZWRzcQB+AAwIfwM9dAANbW9kaWZ5SGFzRWxlbXNxAH4ADFtUV2h0AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ5c3EAfgAMOPYT23QAAj09c3EAfgAMx5K8E3QAEmdldFN0YWNrVHJhY2VEZXB0aHNxAH4ADJcXtbR0AAVjbG9uZXNxAH4ADHYKHoJ0AA1hZGRTdXBwcmVzc2Vkc3EAfgAMRe8EBXQACmhhc0VsZW1lbnRzcQB+AAx+0CjxdAAGJGluaXQkc3EAfgAM7pEtLXQABGNvcHlzcQB+AAzGCfcxdAAYbW9kaWZ5QXJyYXlFbmQkZGVmYXVsdCQ3c3EAfgAMUu/Xi3QACHRvU3RyaW5nc3EAfgAMZohDX3QACmlzSGFsZndvcmRzcQB+AAyOlSCbdAACIT1zcQB+AAxdImcHdAAIZ2V0Q2xhc3NzcQB+AAxWWZ6PdAAOY29weSRkZWZhdWx0JDFzcQB+AAwrqG3kdAACbmVzcQB+AAwtqNW2dAAbZXhlY0FycmF5RnVuY3Rpb24kZGVmYXVsdCQ4c3EAfgAMc2pFhHQAAmVxc3EAfgAMnlmXKnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADFJXwPZ0AAIjI3NxAH4ADBEZWN50AAhmaW5hbGl6ZXNxAH4ADLwuYut0AAdleHRyYWN0c3EAfgAMCbUG+3QAEWV4ZWNBcnJheUZ1bmN0aW9uc3EAfgAMwfHTbHQAD0N1c3RvbUV4Y2VwdGlvbnNxAH4ADHXCRtN0AA5wcm9kdWN0RWxlbWVudHNxAH4ADAzmkC50ABFleGVjUm9vdEluamVjdGlvbnNxAH4ADO2S/Cx0AAhoYXNoQ29kZXNxAH4ADENZU290ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDhzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAraW8uemluay5ib3Nvbi5ic29uLmJzb25JbXBsLkN1c3RvbUV4Y2VwdGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgC1c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJ1MAAlpbmhlcml0ZWRxAH4AnUwAB3BhcmVudHNxAH4AnXhxAH4AunNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AJgAAAAAc3EAfgC1dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAhzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgC5dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgC5c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDTc3EAfgDGdAAHUHJvZHVjdHEAfgDMc3EAfgDGdAAGRXF1YWxzcQB+AMxzcQB+AMZ0AAlFeGNlcHRpb25zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDSdAAEamF2YXNxAH4A0nQABGxhbmdxAH4A13NxAH4AxnQACVRocm93YWJsZXEAfgDec3EAfgDGcQB+AMlzcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJ0AAJpb3EAfgDXc3EAfgDGdAAGT2JqZWN0cQB+AN5zcQB+AMZ0AANBbnlxAH4AzHNxAH4AmnEAfgCndXEAfgCoAAAAAHNxAH4AqgB0ACVpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGwuQm9zb25JbXBsdXEAfgCtAAAAAHEAfgCxdXEAfgCzAAAAAHNxAH4AtXEAfgC7c3EAfgC1c3EAfgC9c3EAfgC1dXEAfgCYAAAAAHNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AMQAAAACc3EAfgDGcQB+AO9zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJxAH4A5HEAfgDXc3EAfgDGcQB+APFzcQB+AMpzcQB+AM11cQB+ANAAAAACc3EAfgDScQB+ANVxAH4A13VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AQ50ABJpby56aW5rLmJvc29uLmJzb25zcQB+AQ50AAJpb3NxAH4BDnQADWlvLnppbmsuYm9zb25zcQB+AQ50ABtpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGxzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEv9VRdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tY29yZS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFCCKuFTvbPQUUUQruFiO9j8LHO2C
io.zink.boson.bson.bsonImpl.CustomException -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwZMa57wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAABDc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwrtbtXnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDdzcQB+AAyOdqkFdAAGbm90aWZ5c3EAfgAMk340K3QAD3ByaW50U3RhY2tUcmFjZXNxAH4ADFcN30t0ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDVzcQB+AAwT+Dn0dAATZ2V0TG9jYWxpemVkTWVzc2FnZXNxAH4ADDtmeiR0AAR3YWl0c3EAfgAM3WoTU3QACW1vZGlmeUFsbHNxAH4ADG+MDFB0AA0kYXNJbnN0YW5jZU9mc3EAfgAMAYfamXQACWR1cGxpY2F0ZXNxAH4ADG6OD5N0ABlleGVjU3RhdGVtZW50UGF0dGVybk1hdGNoc3EAfgAMZ6t77XQADHByb2R1Y3RBcml0eXNxAH4ADHR+DhN0AARzbXRoc3EAfgAMIXpi5XQABmVxdWFsc3NxAH4ADFNkOAB0ABNtb2RpZnlBbGwkZGVmYXVsdCQ1c3EAfgAM3LE4MnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDhzcQB+AAypVsxedAAQZmlsbEluU3RhY2tUcmFjZXNxAH4ADE7dv550AAlpbml0Q2F1c2VzcQB+AAwseMsIdAAMYXNJbnN0YW5jZU9mc3EAfgAMz86ASnQAGG1vZGlmeUFycmF5RW5kJGRlZmF1bHQkNnNxAH4ADMiCcpd0AAxzeW5jaHJvbml6ZWRzcQB+AAyOJuQAdAAVbW9kaWZ5QXJyYXlFbmRXaXRoS2V5c3EAfgAMPw2UiXQADSRpc0luc3RhbmNlT2ZzcQB+AAxVss+BdAAIZ2V0Q2F1c2VzcQB+AAxVW84PdAAKZ2V0Qnl0ZUJ1ZnNxAH4ADDRUGC90AA5tb2RpZnlBcnJheUVuZHNxAH4ADEaKZIx0AAhjYW5FcXVhbHNxAH4ADJZtoQx0AA1wcm9kdWN0UHJlZml4c3EAfgAMFMBs03QACW5vdGlmeUFsbHNxAH4ADHLuWhJ0AAxpc0luc3RhbmNlT2ZzcQB+AAw6SBh5dAANZ2V0U3RhY2tUcmFjZXNxAH4ADHsFOr50ABRnZXRTdGFja1RyYWNlRWxlbWVudHNxAH4ADHVzT610AAVhcnJheXNxAH4ADOJSjI10AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ2c3EAfgAMzliCY3QABjxpbml0PnNxAH4ADH89wN50ABdtb2RpZnlIYXNFbGVtJGRlZmF1bHQkNnNxAH4ADJB96gB0AApnZXRNZXNzYWdlc3EAfgAMTqDFSnQACUJvc29uSW1wbHNxAH4ADDwOp410AA1zZXRTdGFja1RyYWNlc3EAfgAMb6OSFnQADWdldFN1cHByZXNzZWRzcQB+AAwIfwM9dAANbW9kaWZ5SGFzRWxlbXNxAH4ADFtUV2h0AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ5c3EAfgAMOPYT23QAAj09c3EAfgAMx5K8E3QAEmdldFN0YWNrVHJhY2VEZXB0aHNxAH4ADJcXtbR0AAVjbG9uZXNxAH4ADHYKHoJ0AA1hZGRTdXBwcmVzc2Vkc3EAfgAMRe8EBXQACmhhc0VsZW1lbnRzcQB+AAx+0CjxdAAGJGluaXQkc3EAfgAM7pEtLXQABGNvcHlzcQB+AAzGCfcxdAAYbW9kaWZ5QXJyYXlFbmQkZGVmYXVsdCQ3c3EAfgAMUu/Xi3QACHRvU3RyaW5nc3EAfgAMZohDX3QACmlzSGFsZndvcmRzcQB+AAyOlSCbdAACIT1zcQB+AAxdImcHdAAIZ2V0Q2xhc3NzcQB+AAxWWZ6PdAAOY29weSRkZWZhdWx0JDFzcQB+AAwrqG3kdAACbmVzcQB+AAwtqNW2dAAbZXhlY0FycmF5RnVuY3Rpb24kZGVmYXVsdCQ4c3EAfgAMc2pFhHQAAmVxc3EAfgAMnlmXKnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADFJXwPZ0AAIjI3NxAH4ADBEZWN50AAhmaW5hbGl6ZXNxAH4ADLwuYut0AAdleHRyYWN0c3EAfgAMCbUG+3QAEWV4ZWNBcnJheUZ1bmN0aW9uc3EAfgAMwfHTbHQAD0N1c3RvbUV4Y2VwdGlvbnNxAH4ADHXCRtN0AA5wcm9kdWN0RWxlbWVudHNxAH4ADAzmkC50ABFleGVjUm9vdEluamVjdGlvbnNxAH4ADO2S/Cx0AAhoYXNoQ29kZXNxAH4ADENZU290ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDhzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAraW8uemluay5ib3Nvbi5ic29uLmJzb25JbXBsLkN1c3RvbUV4Y2VwdGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgC1c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJ1MAAlpbmhlcml0ZWRxAH4AnUwAB3BhcmVudHNxAH4AnXhxAH4AunNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AJgAAAAAc3EAfgC1dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAhzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgC5dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgC5c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDTc3EAfgDGdAAHUHJvZHVjdHEAfgDMc3EAfgDGdAAGRXF1YWxzcQB+AMxzcQB+AMZ0AAlFeGNlcHRpb25zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDSdAAEamF2YXNxAH4A0nQABGxhbmdxAH4A13NxAH4AxnQACVRocm93YWJsZXEAfgDec3EAfgDGcQB+AMlzcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJ0AAJpb3EAfgDXc3EAfgDGdAAGT2JqZWN0cQB+AN5zcQB+AMZ0AANBbnlxAH4AzHNxAH4AmnEAfgCndXEAfgCoAAAAAHNxAH4AqgB0ACVpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGwuQm9zb25JbXBsdXEAfgCtAAAAAHEAfgCxdXEAfgCzAAAAAHNxAH4AtXEAfgC7c3EAfgC1c3EAfgC9c3EAfgC1dXEAfgCYAAAAAHNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AMQAAAACc3EAfgDGcQB+AO9zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJxAH4A5HEAfgDXc3EAfgDGcQB+APFzcQB+AMpzcQB+AM11cQB+ANAAAAACc3EAfgDScQB+ANVxAH4A13VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AQ50ABJpby56aW5rLmJvc29uLmJzb25zcQB+AQ50AAJpb3NxAH4BDnQADWlvLnppbmsuYm9zb25zcQB+AQ50ABtpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGxzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEv9VRdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tY29yZS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFCCKuFTvbPQUUUQruFiO9j8LHO2C
io.zink.boson.bson.bsonImpl.CustomException$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwZMa57wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAABDc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwrtbtXnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDdzcQB+AAyOdqkFdAAGbm90aWZ5c3EAfgAMk340K3QAD3ByaW50U3RhY2tUcmFjZXNxAH4ADFcN30t0ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDVzcQB+AAwT+Dn0dAATZ2V0TG9jYWxpemVkTWVzc2FnZXNxAH4ADDtmeiR0AAR3YWl0c3EAfgAM3WoTU3QACW1vZGlmeUFsbHNxAH4ADG+MDFB0AA0kYXNJbnN0YW5jZU9mc3EAfgAMAYfamXQACWR1cGxpY2F0ZXNxAH4ADG6OD5N0ABlleGVjU3RhdGVtZW50UGF0dGVybk1hdGNoc3EAfgAMZ6t77XQADHByb2R1Y3RBcml0eXNxAH4ADHR+DhN0AARzbXRoc3EAfgAMIXpi5XQABmVxdWFsc3NxAH4ADFNkOAB0ABNtb2RpZnlBbGwkZGVmYXVsdCQ1c3EAfgAM3LE4MnQAH21vZGlmeUFycmF5RW5kV2l0aEtleSRkZWZhdWx0JDhzcQB+AAypVsxedAAQZmlsbEluU3RhY2tUcmFjZXNxAH4ADE7dv550AAlpbml0Q2F1c2VzcQB+AAwseMsIdAAMYXNJbnN0YW5jZU9mc3EAfgAMz86ASnQAGG1vZGlmeUFycmF5RW5kJGRlZmF1bHQkNnNxAH4ADMiCcpd0AAxzeW5jaHJvbml6ZWRzcQB+AAyOJuQAdAAVbW9kaWZ5QXJyYXlFbmRXaXRoS2V5c3EAfgAMPw2UiXQADSRpc0luc3RhbmNlT2ZzcQB+AAxVss+BdAAIZ2V0Q2F1c2VzcQB+AAxVW84PdAAKZ2V0Qnl0ZUJ1ZnNxAH4ADDRUGC90AA5tb2RpZnlBcnJheUVuZHNxAH4ADEaKZIx0AAhjYW5FcXVhbHNxAH4ADJZtoQx0AA1wcm9kdWN0UHJlZml4c3EAfgAMFMBs03QACW5vdGlmeUFsbHNxAH4ADHLuWhJ0AAxpc0luc3RhbmNlT2ZzcQB+AAw6SBh5dAANZ2V0U3RhY2tUcmFjZXNxAH4ADHsFOr50ABRnZXRTdGFja1RyYWNlRWxlbWVudHNxAH4ADHVzT610AAVhcnJheXNxAH4ADOJSjI10AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ2c3EAfgAMzliCY3QABjxpbml0PnNxAH4ADH89wN50ABdtb2RpZnlIYXNFbGVtJGRlZmF1bHQkNnNxAH4ADJB96gB0AApnZXRNZXNzYWdlc3EAfgAMTqDFSnQACUJvc29uSW1wbHNxAH4ADDwOp410AA1zZXRTdGFja1RyYWNlc3EAfgAMb6OSFnQADWdldFN1cHByZXNzZWRzcQB+AAwIfwM9dAANbW9kaWZ5SGFzRWxlbXNxAH4ADFtUV2h0AB9tb2RpZnlBcnJheUVuZFdpdGhLZXkkZGVmYXVsdCQ5c3EAfgAMOPYT23QAAj09c3EAfgAMx5K8E3QAEmdldFN0YWNrVHJhY2VEZXB0aHNxAH4ADJcXtbR0AAVjbG9uZXNxAH4ADHYKHoJ0AA1hZGRTdXBwcmVzc2Vkc3EAfgAMRe8EBXQACmhhc0VsZW1lbnRzcQB+AAx+0CjxdAAGJGluaXQkc3EAfgAM7pEtLXQABGNvcHlzcQB+AAzGCfcxdAAYbW9kaWZ5QXJyYXlFbmQkZGVmYXVsdCQ3c3EAfgAMUu/Xi3QACHRvU3RyaW5nc3EAfgAMZohDX3QACmlzSGFsZndvcmRzcQB+AAyOlSCbdAACIT1zcQB+AAxdImcHdAAIZ2V0Q2xhc3NzcQB+AAxWWZ6PdAAOY29weSRkZWZhdWx0JDFzcQB+AAwrqG3kdAACbmVzcQB+AAwtqNW2dAAbZXhlY0FycmF5RnVuY3Rpb24kZGVmYXVsdCQ4c3EAfgAMc2pFhHQAAmVxc3EAfgAMnlmXKnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADFJXwPZ0AAIjI3NxAH4ADBEZWN50AAhmaW5hbGl6ZXNxAH4ADLwuYut0AAdleHRyYWN0c3EAfgAMCbUG+3QAEWV4ZWNBcnJheUZ1bmN0aW9uc3EAfgAMwfHTbHQAD0N1c3RvbUV4Y2VwdGlvbnNxAH4ADHXCRtN0AA5wcm9kdWN0RWxlbWVudHNxAH4ADAzmkC50ABFleGVjUm9vdEluamVjdGlvbnNxAH4ADO2S/Cx0AAhoYXNoQ29kZXNxAH4ADENZU290ABhtb2RpZnlBcnJheUVuZCRkZWZhdWx0JDhzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAraW8uemluay5ib3Nvbi5ic29uLmJzb25JbXBsLkN1c3RvbUV4Y2VwdGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgC1c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJ1MAAlpbmhlcml0ZWRxAH4AnUwAB3BhcmVudHNxAH4AnXhxAH4AunNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AJgAAAAAc3EAfgC1dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAhzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgC5dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgC5c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDTc3EAfgDGdAAHUHJvZHVjdHEAfgDMc3EAfgDGdAAGRXF1YWxzcQB+AMxzcQB+AMZ0AAlFeGNlcHRpb25zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDSdAAEamF2YXNxAH4A0nQABGxhbmdxAH4A13NxAH4AxnQACVRocm93YWJsZXEAfgDec3EAfgDGcQB+AMlzcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJ0AAJpb3EAfgDXc3EAfgDGdAAGT2JqZWN0cQB+AN5zcQB+AMZ0AANBbnlxAH4AzHNxAH4AmnEAfgCndXEAfgCoAAAAAHNxAH4AqgB0ACVpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGwuQm9zb25JbXBsdXEAfgCtAAAAAHEAfgCxdXEAfgCzAAAAAHNxAH4AtXEAfgC7c3EAfgC1c3EAfgC9c3EAfgC1dXEAfgCYAAAAAHNxAH4AtXVxAH4AmAAAAABzcQB+ALV1cQB+AMQAAAACc3EAfgDGcQB+AO9zcQB+AMpzcQB+AM11cQB+ANAAAAADc3EAfgDScQB+AOJzcQB+ANJxAH4A5HEAfgDXc3EAfgDGcQB+APFzcQB+AMpzcQB+AM11cQB+ANAAAAACc3EAfgDScQB+ANVxAH4A13VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AQ50ABJpby56aW5rLmJvc29uLmJzb25zcQB+AQ50AAJpb3NxAH4BDnQADWlvLnppbmsuYm9zb25zcQB+AQ50ABtpby56aW5rLmJvc29uLmJzb24uYnNvbkltcGxzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEv9VRdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tY29yZS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFCCKuFTvbPQUUUQruFiO9j8LHO2C
io.zink.boson.bson.bsonImpl.Dictionary$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwJq0kogAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAA/c3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw9RAd7HQAB0NfTEVWRUxzcQB+AAxz9PSkdAAGRF9MT05Hc3EAfgAMqWkQxnQABUNfRU5Ec3EAfgAMofyMv3QABm5vdGlmeXNxAH4ADMDzPBt0AAZEX05VTExzcQB+AAzj2BlAdAAKQVJSQVlfQllURXNxAH4ADEZx60Z0AAR3YWl0c3EAfgAM+vgg+HQADkRfRkxPQVRfRE9VQkxFc3EAfgAML4QuaHQAC0NfRE9VQkxFRE9Uc3EAfgAMaGdUKHQADSRhc0luc3RhbmNlT2ZzcQB+AAwIzswkdAAPUF9DTE9TRV9CUkFDS0VUc3EAfgAM4h+Rj3QABmVxdWFsc3NxAH4ADKE2w+F0AAZDX05FWFRzcQB+AAxy1/hmdAAMYXNJbnN0YW5jZU9mc3EAfgAMKy4r3XQABFNUQVJzcQB+AAyNeAsQdAAMc3luY2hyb25pemVkc3EAfgAMkwM9eXQADSRpc0luc3RhbmNlT2ZzcQB+AAxrttILdAANUF9VTlRJTF9SQU5HRXNxAH4ADCbhAs50AApEaWN0aW9uYXJ5c3EAfgAMd0rAQnQACFRPX1JBTkdFc3EAfgAMGyBABHQAClBfSEFTX0VMRU1zcQB+AAzGbd9IdAAGQ19MQVNUc3EAfgAM+oTMuHQAB0NfRklSU1RzcQB+AAxEvbP2dAALRF9aRVJPX0JZVEVzcQB+AAz/SYKhdAAKUF9UT19SQU5HRXNxAH4ADNYflO50AAlub3RpZnlBbGxzcQB+AAy5jJqYdAAGUF9XT1JEc3EAfgAMIb2mynQABUNfQUxMc3EAfgAMv6RtRXQADGlzSW5zdGFuY2VPZnNxAH4ADJLWV5l0AAxEX0JTT05PQkpFQ1RzcQB+AAwNeSfTdAAMQ19MSU1JVExFVkVMc3EAfgAM7k2urHQAB0NfTElNSVRzcQB+AAyUVwV8dAAOU0NBTEFfQVJSQVlCVUZzcQB+AAxQ9EYqdAAFRF9JTlRzcQB+AAzzYCb+dAACPT1zcQB+AAzTw7qldAAFY2xvbmVzcQB+AAxXEJBBdAAHY2hhcnNldHNxAH4ADEN6muB0AA5QX09QRU5fQlJBQ0tFVHNxAH4ADFSbUFJ0AAlFTVBUWV9LRVlzcQB+AAy56rYzdAAKRV9NT1JFS0VZU3NxAH4ADLRAw1B0AAtEX0JTT05BUlJBWXNxAH4ADMM41c90AAtFTVBUWV9SQU5HRXNxAH4ADGQpesl0AApFX0hBTEZOQU1Fc3EAfgAMUR4Db3QAD0pBVkFfQllURUJVRkZFUnNxAH4ADC2j+L90AAh0b1N0cmluZ3NxAH4ADKNFdHl0AAlEX0JPT0xFQU5zcQB+AAzW9bDydAACIT1zcQB+AAyokc65dAAIQ19GSUxURVJzcQB+AAzXNuYrdAAIQ19SQU5ET01zcQB+AAzhIpq8dAAIZ2V0Q2xhc3NzcQB+AAy3/XsrdAAGVl9OVUxMc3EAfgAMC40WsnQABUNfRE9Uc3EAfgAMaEvSz3QAC1VOVElMX1JBTkdFc3EAfgAMqZxDM3QAAm5lc3EAfgAMnTOv63QAAmVxc3EAfgAM0+7ObHQADFdBUk5JTkdfQ0hBUnNxAH4ADKAj82N0ABFFTVBUWV9DT05TVFJVQ1RPUnNxAH4ADKYvHER0AAIjI3NxAH4ADCvIVU10AAhQX05VTUJFUnNxAH4ADEca8U50AAhmaW5hbGl6ZXNxAH4ADDeVawJ0AAhoYXNoQ29kZXNxAH4ADBrwZ1V0AAdDX01BVENIc3EAfgAMn03qQ3QAHURfQVJSQVlCX0lOU1RfU1RSX0VOVU1fQ0hSU0VRc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AlXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAJmlvLnppbmsuYm9zb24uYnNvbi5ic29uSW1wbC5EaWN0aW9uYXJ5dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCtc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJVMAAlpbmhlcml0ZWRxAH4AlUwAB3BhcmVudHNxAH4AlXhxAH4AsnNxAH4ArXVxAH4AkAAAAABzcQB+AK11cQB+AJAAAAAAc3EAfgCtdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCxdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCxc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgDKdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDLc3EAfgC+dAADQW55c3EAfgDCc3EAfgDFdXEAfgDIAAAAAnNxAH4AynQABXNjYWxhcQB+ANF1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAdpby56aW5rc3EAfgDbdAASaW8uemluay5ib3Nvbi5ic29uc3EAfgDbdAACaW9zcQB+ANt0AA1pby56aW5rLmJvc29uc3EAfgDbdAAbaW8uemluay5ib3Nvbi5ic29uLmJzb25JbXBsc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTOaspazrQQERGKwljke2//AS5Qjg==
io.zink.boson.bson.bsonPath.ArrExpr -> 

io.zink.boson.bson.bsonPath.ArrExpr$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwTkNFTQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAANzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHBloM1xdAAHbGl0ZXJhbHNxAH4AC2x6tR10AAZhY2NlcHRzcQB+AAtHvGUzdAAFcmVnZXh1cQB+AAkAAACBc3EAfgAL6LHn03QAEHdpdGhFcnJvck1lc3NhZ2VzcQB+AAu3rVYFdAAKd2l0aEZpbHRlcnNxAH4ACw/7aMt0AAJeXnNxAH4ACybbrv10AA9mbGF0TWFwV2l0aE5leHRzcQB+AAutOexMdAAGbm90aWZ5c3EAfgALhu01CnQAB2ZhaWx1cmVzcQB+AAvJws/+dAAHdW5hcHBseXNxAH4ACzTFfSJ0AAdwcm9ncmFtc3EAfgALVHWsAnQAB2N1cnJpZWRzcQB+AAsh4NGpdAAGbWlkQXJnc3EAfgALJgNMG3QAA3x8fHNxAH4AC63EjTd0AAdzdWNjZXNzc3EAfgAL+ShCVXQABHdhaXRzcQB+AAtMlf7KdAABKnNxAH4AC3YcGrN0AAZhY2NlcHRzcQB+AAuDJfBRdAAOY29weSRkZWZhdWx0JDJzcQB+AAuynn/3dAANJGFzSW5zdGFuY2VPZnNxAH4AC3k8N6J0AANvcHRzcQB+AAupHWxtdAAKbWFwUGFydGlhbHNxAH4ACxJZ1UV0AAZjb21taXRzcQB+AAtO6CEudAAPZmlsdGVyV2l0aEVycm9yc3EAfgALyZGOHnQAB2NvbXBvc2VzcQB+AAvKdUyCdAAISGFsZk5hbWVzcQB+AAs0Bd/gdAALUGFyc2VSZXN1bHRzcQB+AAuMM2S+dAADbWFwc3EAfgAL93sti3QADHByb2R1Y3RBcml0eXNxAH4AC8UNIXB0AAxUaW55TGFuZ3VhZ2VzcQB+AAsrFrCzdAAGZXF1YWxzc3EAfgALlE6SUHQAB0hhc0VsZW1zcQB+AAtqnYHydAAKcG9zaXRpb25lZHNxAH4ACzIz0ut0AAVhcnJFeHNxAH4AC5xavgR0AAVFcnJvcnNxAH4AC0yjZrB0AARyZXBOc3EAfgAL+lPWBnQADGFzSW5zdGFuY2VPZnNxAH4AC4Ct90V0AAZyZXN1bHRzcQB+AAuPVyCDdAAMc3luY2hyb25pemVkc3EAfgALe1l1zHQACU5vU3VjY2Vzc3NxAH4AC6fN7Sh0AAZwaHJhc2VzcQB+AAuFI9E0dAANJGlzSW5zdGFuY2VPZnNxAH4ACxgs2L50AAdhbmRUaGVuc3EAfgAL3WLVR3QAAn4+c3EAfgALFyjp93QABnR1cGxlZHNxAH4AC2Uy8zZ0AAF8c3EAfgAL0mBd/HQACGNhbkVxdWFsc3EAfgALi4we03QABHJlcDFzcQB+AAsCVfZYdAAJc3RhdGVtZW50c3EAfgALCF2TE3QAAj4+c3EAfgALLyfmcXQADXByb2R1Y3RQcmVmaXhzcQB+AAuy5E6cdAAIcGFyc2VBbGxzcQB+AAtUhdNpdAAHUHJvZ3JhbXNxAH4ACxpyl7F0AAYkdGlsZGVzcQB+AAumK4ctdAAJbm90aWZ5QWxsc3EAfgALiLdATXQABW5hbWVkc3EAfgALDp3WCXQAAl8yc3EAfgAL5D3YhnQABGhhbGZzcQB+AAuawUbsdAAHRmFpbHVyZXNxAH4ACwmLblx0AANrZXlzcQB+AAvkF46rdAADXl5ec3EAfgAL0g6mB3QADGlzSW5zdGFuY2VPZnNxAH4AC0WovGF0AAZmaWx0ZXJzcQB+AAueYzkIdAAHbGVmdEFyZ3NxAH4AC51sWlp0AAY8aW5pdD5zcQB+AAuP8jbAdAAHQXJyRXhwcnNxAH4AC7KTORh0AARFbGVtc3EAfgALLmOEFnQABUlucHV0c3EAfgALx37ZGHQAB3JlcDFzZXBzcQB+AAs6bYGqdAAFYXBwbHlzcQB+AAtBJeuedAAKc3VjY2Vzc2Z1bHNxAH4AC3tdgO90AAlTdGF0ZW1lbnRzcQB+AAskqhtZdAAHZmxhdE1hcHNxAH4ACw0z+Mx0AAlnZXRPckVsc2VzcQB+AAuLjDwsdAAKd2hpdGVTcGFjZXNxAH4ACwz0YqR0AAVwYXJzZXNxAH4ACzXC3qF0AAI9PXNxAH4AC9rd/RZ0AAthY2NlcHRNYXRjaHNxAH4AC05et1F0AAVjbG9uZXNxAH4AC9Z+bGJ0AA5za2lwV2hpdGVzcGFjZXNxAH4AC/nfGIx0AAJfMXNxAH4AC7+/IQN0AANub3RzcQB+AAsH02nodAAGJGluaXQkc3EAfgALwlHUuHQAAT9zcQB+AAv6DDrldAACXj9zcQB+AAt7xB4/dAAEbmV4dHNxAH4ACx63LS50AAhhY2NlcHRJZnNxAH4AC29S4vV0AAZta0xpc3RzcQB+AAsIQtktdAAFZmlyc3RzcQB+AAukmaQ+dAAOY29weSRkZWZhdWx0JDNzcQB+AAuAfLfJdAAEY29weXNxAH4AC530rw50ABBoYW5kbGVXaGl0ZVNwYWNlc3EAfgALyE7DO3QACHRvU3RyaW5nc3EAfgALmRjC3HQAA2VycnNxAH4AC7H5wQp0AANtc2dzcQB+AAsntU4EdAABK3NxAH4ACx9oXft0AAIhPXNxAH4ACxmH+710AARpbnRvc3EAfgALxiAn13QAA2dldHNxAH4AC8k/Xtx0ABJ3aXRoRmFpbHVyZU1lc3NhZ2VzcQB+AAskIKbwdAAIZ2V0Q2xhc3NzcQB+AAuotKIqdAAFZ3VhcmRzcQB+AAuKzzyldAAOY29weSRkZWZhdWx0JDFzcQB+AAuIVbVJdAAHY2hhaW5sMXNxAH4ACyQ00jd0AAZQYXJzZXJzcQB+AAs1QnHldAAHU3VjY2Vzc3NxAH4AC5YwNBV0AA5LZXlXaXRoQXJyRXhwcnNxAH4ACwtQYTt0AANyZXBzcQB+AAsJpNRFdAAHaXNFbXB0eXNxAH4AC0CJgkl0AAJuZXNxAH4AC/T9HEx0AAI8fnNxAH4AC5SGQiJ0AARST09Uc3EAfgALlXVxcnQAAX5zcQB+AAujjp4ldAAKT25jZVBhcnNlcnNxAH4AC5rFVvB0AARlbGVtc3EAfgAL855mPnQACWFjY2VwdFNlcXNxAH4AC0e0IrR0AAhyaWdodEFyZ3NxAH4AC/Mu3Ch0AAJlcXNxAH4AC8u158N0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAsA08BcdAADbG9nc3EAfgAL9DGkzXQABnJlcHNlcHNxAH4AC775EKV0AAJ+IXNxAH4AC6DHkwx0AAhNb3JlS2V5c3NxAH4AC1FVmLh0AAIjI3NxAH4AC42EXhJ0AARsaXN0c3EAfgALP9ZibHQACGZpbmFsaXplc3EAfgAL5XUEVnQADnByb2R1Y3RFbGVtZW50c3EAfgALZx91fHQACGhhc2hDb2Rlc3EAfgALHc7htXQAA0tleXNxAH4AC5h8a3R0AAdkb3RMaXN0c3EAfgAL7YJiR3QAB2NoYWlucjFzcQB+AAsv0WSmdAAGYXBwZW5kc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4BH3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AAx4cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJWlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5TdGF0ZW1lbnR1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4BN3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgEfTAAJaW5oZXJpdGVkcQB+AR9MAAdwYXJlbnRzcQB+AR94cQB+ATxzcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgAMTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4BO3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4BO3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AAx4cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4BVHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4BVXNxAH4BSHQAA0FueXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVR0AAVzY2FsYXEAfgFbc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAKmlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5LZXlXaXRoQXJyRXhwcnVxAH4BLwAAAAB+cQB+ATF0AAhDbGFzc0RlZnVxAH4BNQAAAABzcQB+ATdxAH4BPXNxAH4BN3NxAH4BP3NxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgFGAAAAB3NxAH4BSHQADFNlcmlhbGl6YWJsZXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIdAAHUHJvZHVjdHEAfgF2c3EAfgFIdAAGRXF1YWxzcQB+AXZzcQB+AUh0AAlTdGF0ZW1lbnRzcQB+AUxzcQB+AU91cQB+AVIAAAAGc3EAfgFUdAACaW9zcQB+AVR0AAR6aW5rc3EAfgFUdAAFYm9zb25zcQB+AVR0AARic29uc3EAfgFUdAAIYnNvblBhdGhxAH4BW3NxAH4BSHEAfgFLc3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUcQB+AVlxAH4BW3NxAH4BSHEAfgFdcQB+AXZzcQB+ARxxAH4BKXVxAH4BKgAAAABzcQB+ASwAdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25QYXRoLkFyckV4cHJ1cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4Bq3NxAH4BSHQABkVxdWFsc3EAfgGrc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgGrc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5IYWxmTmFtZXVxAH4BLwAAAABxAH4BaHVxAH4BNQAAAABzcQB+ATdxAH4BPXNxAH4BN3NxAH4BP3NxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgFGAAAAB3NxAH4BSHEAfgF1c3EAfgFMc3EAfgFPdXEAfgFSAAAAAnNxAH4BVHEAfgFicQB+AVtzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHQAAmlvcQB+AVtzcQB+AUhxAH4BgnEAfgHfc3EAfgFIdAAGRXF1YWxzcQB+Ad9zcQB+AUh0AAlTdGF0ZW1lbnRzcQB+AUxzcQB+AU91cQB+AVIAAAAGc3EAfgFUdAACaW9zcQB+AVR0AAR6aW5rc3EAfgFUdAAFYm9zb25zcQB+AVR0AARic29uc3EAfgFUdAAIYnNvblBhdGhxAH4BW3NxAH4BSHEAfgFLc3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUcQB+AVlxAH4BW3NxAH4BSHEAfgFdcQB+Ad9zcQB+ARxxAH4BKXVxAH4BKgAAAABzcQB+ASwAdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25QYXRoLkhhc0VsZW11cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4CE3NxAH4BSHQABkVxdWFsc3EAfgITc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgITc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAH2lvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5LZXl1cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4CR3NxAH4BSHQABkVxdWFsc3EAfgJHc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgJHc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAIGlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5ST09UdXEAfgEvAAAAAHEAfgFodXEAfgE1AAAAAHNxAH4BN3EAfgE9c3EAfgE3c3EAfgE/c3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+AUYAAAAHc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAACc3EAfgFUcQB+AWJxAH4BW3NxAH4BSHEAfgF1c3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUdAACaW9xAH4BW3NxAH4BSHEAfgGCcQB+AntzcQB+AUh0AAZFcXVhbHNxAH4Ce3NxAH4BSHQACVN0YXRlbWVudHNxAH4BTHNxAH4BT3VxAH4BUgAAAAZzcQB+AVR0AAJpb3NxAH4BVHQABHppbmtzcQB+AVR0AAVib3NvbnNxAH4BVHQABGJzb25zcQB+AVR0AAhic29uUGF0aHEAfgFbc3EAfgFIcQB+AUtzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVRxAH4BWXEAfgFbc3EAfgFIcQB+AV1xAH4Ce3NxAH4BHHEAfgEpdXEAfgEqAAAAAHNxAH4BLAB0ACRpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGguTW9yZUtleXN1cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4Cr3NxAH4BSHQABkVxdWFsc3EAfgKvc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgKvc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5Qcm9ncmFtdXEAfgEvAAAAAHEAfgFodXEAfgE1AAAAAHNxAH4BN3EAfgE9c3EAfgE3c3EAfgE/c3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+AUYAAAACc3EAfgFIcQB+AUtzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVRxAH4BWXEAfgFbc3EAfgFIcQB+AV1zcQB+AUxzcQB+AU91cQB+AVIAAAACc3EAfgFUcQB+AWJxAH4BW3NxAH4BHHEAfgEpdXEAfgEqAAAAAHNxAH4BLAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGguVGlueUxhbmd1YWdldXEAfgEvAAAAAHEAfgFodXEAfgE1AAAAAXQAGnNjYWxhLmFubm90YXRpb24ubWlncmF0aW9uc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAARzcQB+AUh0AAxSZWdleFBhcnNlcnNzcQB+AUxzcQB+AU91cQB+AVIAAAAFc3EAfgFUcQB+AWJzcQB+AVR0AAR1dGlsc3EAfgFUdAAHcGFyc2luZ3NxAH4BVHQACmNvbWJpbmF0b3JxAH4BW3NxAH4BSHQAB1BhcnNlcnNxAH4C/3NxAH4BSHEAfgFLc3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUcQB+AVlxAH4BW3NxAH4BSHEAfgFdc3EAfgFMc3EAfgFPdXEAfgFSAAAAAnNxAH4BVHEAfgFicQB+AVt1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0ABtpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGhzcQB+Axh0AAdpby56aW5rc3EAfgMYdAASaW8uemluay5ib3Nvbi5ic29uc3EAfgMYdAACaW9zcQB+Axh0AA1pby56aW5rLmJvc29uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQfUDUkbkvUWZPOp1uAk9NbCpv2rg==
io.zink.boson.bson.bsonPath.Interpreter -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwTm4XIAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAYc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwoSmxnXQABm5vdGlmeXNxAH4ADKcl7IR0AAR3YWl0c3EAfgAMPd6c/XQADSRhc0luc3RhbmNlT2ZzcQB+AAxNNGfvdAAGZXF1YWxzc3EAfgAMjZTPe3QADGFzSW5zdGFuY2VPZnNxAH4ADCFBosp0AANydW5zcQB+AAwewnxTdAAMc3luY2hyb25pemVkc3EAfgAMMiGgQXQAC0ludGVycHJldGVyc3EAfgAM5wK2tXQADSRpc0luc3RhbmNlT2ZzcQB+AAyXcy+WdAAIY29tcG9zZXJzcQB+AAxOzviadAAJbm90aWZ5QWxsc3EAfgAM6l2tYXQAB0NvbXBvc2VzcQB+AAww5VgudAAMaXNJbnN0YW5jZU9mc3EAfgAMX9vkk3QABjxpbml0PnNxAH4ADB+BTx10AAI9PXNxAH4ADA/jRWJ0AAVjbG9uZXNxAH4ADPjsfwp0AAh0b1N0cmluZ3NxAH4ADGD9AA50AAIhPXNxAH4ADPnDD110AAhnZXRDbGFzc3NxAH4ADHzm+8d0AAJuZXNxAH4ADKOZkaF0AAJlcXNxAH4ADJIRWMx0AAIjI3NxAH4ADIu+q3B0AAhmaW5hbGl6ZXNxAH4ADP5U0Ph0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEd4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACdpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGguSW50ZXJwcmV0ZXJ1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4ATEwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AElMAAp1cHBlckJvdW5kcQB+AFpMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AFIAAAAAdAApaW8uemluay5ib3Nvbi5ic29uLmJzb25QYXRoLkludGVycHJldGVyLlRzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwdAAHTm90aGluZ3NyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AbnVxAH4AVwAAAABzcQB+AF90AANBbnlxAH4AZ35yABJ4c2J0aS5hcGkuVmFyaWFuY2UAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAlJbnZhcmlhbnR+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cQB+AHd0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhxAH4AYXNxAH4Af3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBHTAAJaW5oZXJpdGVkcQB+AEdMAAdwYXJlbnRzcQB+AEd4cQB+AGJzcQB+AH91cQB+AEIAAAAAc3EAfgB/dXEAfgBCAAAAAHNxAH4Af3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3EAfgBfdAAGT2JqZWN0c3EAfgBlc3EAfgBodXEAfgBrAAAAA3NxAH4AbXQABGphdmFzcQB+AG10AARsYW5ncQB+AHJzcQB+AF9xAH4AdXNxAH4AZXNxAH4AaHVxAH4AawAAAAJzcQB+AG1xAH4AcHEAfgByc3EAfgBEcQB+AFF1cQB+AFIAAAAAc3EAfgBUAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5Db21wb3NldXEAfgBXAAAAAH5xAH4AenQABk1vZHVsZXVxAH4AfQAAAABzcQB+AH9xAH4Ag3NxAH4Af3NxAH4AhXNxAH4Af3VxAH4AQgAAAABzcQB+AH91cQB+AEIAAAAAc3EAfgB/dXEAfgCMAAAAAnNxAH4AX3EAfgCPc3EAfgBlc3EAfgBodXEAfgBrAAAAA3NxAH4AbXEAfgCUc3EAfgBtcQB+AJZxAH4AcnNxAH4AX3EAfgB1c3EAfgBlc3EAfgBodXEAfgBrAAAAAnNxAH4AbXEAfgBwcQB+AHJ1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABtpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGhzcQB+ALp0AAdpby56aW5rc3EAfgC6dAASaW8uemluay5ib3Nvbi5ic29uc3EAfgC6dAACaW9zcQB+ALp0AA1pby56aW5rLmJvc29uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQQONzwNkb4XdV24eM6OL845i78YA==
io.zink.boson.bson.bsonPath.Interpreter$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwTm4XIAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAYc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwoSmxnXQABm5vdGlmeXNxAH4ADKcl7IR0AAR3YWl0c3EAfgAMPd6c/XQADSRhc0luc3RhbmNlT2ZzcQB+AAxNNGfvdAAGZXF1YWxzc3EAfgAMjZTPe3QADGFzSW5zdGFuY2VPZnNxAH4ADCFBosp0AANydW5zcQB+AAwewnxTdAAMc3luY2hyb25pemVkc3EAfgAMMiGgQXQAC0ludGVycHJldGVyc3EAfgAM5wK2tXQADSRpc0luc3RhbmNlT2ZzcQB+AAyXcy+WdAAIY29tcG9zZXJzcQB+AAxOzviadAAJbm90aWZ5QWxsc3EAfgAM6l2tYXQAB0NvbXBvc2VzcQB+AAww5VgudAAMaXNJbnN0YW5jZU9mc3EAfgAMX9vkk3QABjxpbml0PnNxAH4ADB+BTx10AAI9PXNxAH4ADA/jRWJ0AAVjbG9uZXNxAH4ADPjsfwp0AAh0b1N0cmluZ3NxAH4ADGD9AA50AAIhPXNxAH4ADPnDD110AAhnZXRDbGFzc3NxAH4ADHzm+8d0AAJuZXNxAH4ADKOZkaF0AAJlcXNxAH4ADJIRWMx0AAIjI3NxAH4ADIu+q3B0AAhmaW5hbGl6ZXNxAH4ADP5U0Ph0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEd4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACdpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGguSW50ZXJwcmV0ZXJ1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4ATEwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AElMAAp1cHBlckJvdW5kcQB+AFpMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AFIAAAAAdAApaW8uemluay5ib3Nvbi5ic29uLmJzb25QYXRoLkludGVycHJldGVyLlRzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwdAAHTm90aGluZ3NyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AbnVxAH4AVwAAAABzcQB+AF90AANBbnlxAH4AZ35yABJ4c2J0aS5hcGkuVmFyaWFuY2UAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAlJbnZhcmlhbnR+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cQB+AHd0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhxAH4AYXNxAH4Af3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBHTAAJaW5oZXJpdGVkcQB+AEdMAAdwYXJlbnRzcQB+AEd4cQB+AGJzcQB+AH91cQB+AEIAAAAAc3EAfgB/dXEAfgBCAAAAAHNxAH4Af3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3EAfgBfdAAGT2JqZWN0c3EAfgBlc3EAfgBodXEAfgBrAAAAA3NxAH4AbXQABGphdmFzcQB+AG10AARsYW5ncQB+AHJzcQB+AF9xAH4AdXNxAH4AZXNxAH4AaHVxAH4AawAAAAJzcQB+AG1xAH4AcHEAfgByc3EAfgBEcQB+AFF1cQB+AFIAAAAAc3EAfgBUAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5Db21wb3NldXEAfgBXAAAAAH5xAH4AenQABk1vZHVsZXVxAH4AfQAAAABzcQB+AH9xAH4Ag3NxAH4Af3NxAH4AhXNxAH4Af3VxAH4AQgAAAABzcQB+AH91cQB+AEIAAAAAc3EAfgB/dXEAfgCMAAAAAnNxAH4AX3EAfgCPc3EAfgBlc3EAfgBodXEAfgBrAAAAA3NxAH4AbXEAfgCUc3EAfgBtcQB+AJZxAH4AcnNxAH4AX3EAfgB1c3EAfgBlc3EAfgBodXEAfgBrAAAAAnNxAH4AbXEAfgBwcQB+AHJ1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABtpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGhzcQB+ALp0AAdpby56aW5rc3EAfgC6dAASaW8uemluay5ib3Nvbi5ic29uc3EAfgC6dAACaW9zcQB+ALp0AA1pby56aW5rLmJvc29uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQQONzwNkb4XdV24eM6OL845i78YA==
io.zink.boson.bson.bsonPath.Program -> 

io.zink.boson.bson.bsonPath.Statement -> 

io.zink.boson.bson.bsonPath.TinyLanguage -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwTkNFTQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAANzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHBloM1xdAAHbGl0ZXJhbHNxAH4AC2x6tR10AAZhY2NlcHRzcQB+AAtHvGUzdAAFcmVnZXh1cQB+AAkAAACBc3EAfgAL6LHn03QAEHdpdGhFcnJvck1lc3NhZ2VzcQB+AAu3rVYFdAAKd2l0aEZpbHRlcnNxAH4ACw/7aMt0AAJeXnNxAH4ACybbrv10AA9mbGF0TWFwV2l0aE5leHRzcQB+AAutOexMdAAGbm90aWZ5c3EAfgALhu01CnQAB2ZhaWx1cmVzcQB+AAvJws/+dAAHdW5hcHBseXNxAH4ACzTFfSJ0AAdwcm9ncmFtc3EAfgALVHWsAnQAB2N1cnJpZWRzcQB+AAsh4NGpdAAGbWlkQXJnc3EAfgALJgNMG3QAA3x8fHNxAH4AC63EjTd0AAdzdWNjZXNzc3EAfgAL+ShCVXQABHdhaXRzcQB+AAtMlf7KdAABKnNxAH4AC3YcGrN0AAZhY2NlcHRzcQB+AAuDJfBRdAAOY29weSRkZWZhdWx0JDJzcQB+AAuynn/3dAANJGFzSW5zdGFuY2VPZnNxAH4AC3k8N6J0AANvcHRzcQB+AAupHWxtdAAKbWFwUGFydGlhbHNxAH4ACxJZ1UV0AAZjb21taXRzcQB+AAtO6CEudAAPZmlsdGVyV2l0aEVycm9yc3EAfgALyZGOHnQAB2NvbXBvc2VzcQB+AAvKdUyCdAAISGFsZk5hbWVzcQB+AAs0Bd/gdAALUGFyc2VSZXN1bHRzcQB+AAuMM2S+dAADbWFwc3EAfgAL93sti3QADHByb2R1Y3RBcml0eXNxAH4AC8UNIXB0AAxUaW55TGFuZ3VhZ2VzcQB+AAsrFrCzdAAGZXF1YWxzc3EAfgALlE6SUHQAB0hhc0VsZW1zcQB+AAtqnYHydAAKcG9zaXRpb25lZHNxAH4ACzIz0ut0AAVhcnJFeHNxAH4AC5xavgR0AAVFcnJvcnNxAH4AC0yjZrB0AARyZXBOc3EAfgAL+lPWBnQADGFzSW5zdGFuY2VPZnNxAH4AC4Ct90V0AAZyZXN1bHRzcQB+AAuPVyCDdAAMc3luY2hyb25pemVkc3EAfgALe1l1zHQACU5vU3VjY2Vzc3NxAH4AC6fN7Sh0AAZwaHJhc2VzcQB+AAuFI9E0dAANJGlzSW5zdGFuY2VPZnNxAH4ACxgs2L50AAdhbmRUaGVuc3EAfgAL3WLVR3QAAn4+c3EAfgALFyjp93QABnR1cGxlZHNxAH4AC2Uy8zZ0AAF8c3EAfgAL0mBd/HQACGNhbkVxdWFsc3EAfgALi4we03QABHJlcDFzcQB+AAsCVfZYdAAJc3RhdGVtZW50c3EAfgALCF2TE3QAAj4+c3EAfgALLyfmcXQADXByb2R1Y3RQcmVmaXhzcQB+AAuy5E6cdAAIcGFyc2VBbGxzcQB+AAtUhdNpdAAHUHJvZ3JhbXNxAH4ACxpyl7F0AAYkdGlsZGVzcQB+AAumK4ctdAAJbm90aWZ5QWxsc3EAfgALiLdATXQABW5hbWVkc3EAfgALDp3WCXQAAl8yc3EAfgAL5D3YhnQABGhhbGZzcQB+AAuawUbsdAAHRmFpbHVyZXNxAH4ACwmLblx0AANrZXlzcQB+AAvkF46rdAADXl5ec3EAfgAL0g6mB3QADGlzSW5zdGFuY2VPZnNxAH4AC0WovGF0AAZmaWx0ZXJzcQB+AAueYzkIdAAHbGVmdEFyZ3NxAH4AC51sWlp0AAY8aW5pdD5zcQB+AAuP8jbAdAAHQXJyRXhwcnNxAH4AC7KTORh0AARFbGVtc3EAfgALLmOEFnQABUlucHV0c3EAfgALx37ZGHQAB3JlcDFzZXBzcQB+AAs6bYGqdAAFYXBwbHlzcQB+AAtBJeuedAAKc3VjY2Vzc2Z1bHNxAH4AC3tdgO90AAlTdGF0ZW1lbnRzcQB+AAskqhtZdAAHZmxhdE1hcHNxAH4ACw0z+Mx0AAlnZXRPckVsc2VzcQB+AAuLjDwsdAAKd2hpdGVTcGFjZXNxAH4ACwz0YqR0AAVwYXJzZXNxAH4ACzXC3qF0AAI9PXNxAH4AC9rd/RZ0AAthY2NlcHRNYXRjaHNxAH4AC05et1F0AAVjbG9uZXNxAH4AC9Z+bGJ0AA5za2lwV2hpdGVzcGFjZXNxAH4AC/nfGIx0AAJfMXNxAH4AC7+/IQN0AANub3RzcQB+AAsH02nodAAGJGluaXQkc3EAfgALwlHUuHQAAT9zcQB+AAv6DDrldAACXj9zcQB+AAt7xB4/dAAEbmV4dHNxAH4ACx63LS50AAhhY2NlcHRJZnNxAH4AC29S4vV0AAZta0xpc3RzcQB+AAsIQtktdAAFZmlyc3RzcQB+AAukmaQ+dAAOY29weSRkZWZhdWx0JDNzcQB+AAuAfLfJdAAEY29weXNxAH4AC530rw50ABBoYW5kbGVXaGl0ZVNwYWNlc3EAfgALyE7DO3QACHRvU3RyaW5nc3EAfgALmRjC3HQAA2VycnNxAH4AC7H5wQp0AANtc2dzcQB+AAsntU4EdAABK3NxAH4ACx9oXft0AAIhPXNxAH4ACxmH+710AARpbnRvc3EAfgALxiAn13QAA2dldHNxAH4AC8k/Xtx0ABJ3aXRoRmFpbHVyZU1lc3NhZ2VzcQB+AAskIKbwdAAIZ2V0Q2xhc3NzcQB+AAuotKIqdAAFZ3VhcmRzcQB+AAuKzzyldAAOY29weSRkZWZhdWx0JDFzcQB+AAuIVbVJdAAHY2hhaW5sMXNxAH4ACyQ00jd0AAZQYXJzZXJzcQB+AAs1QnHldAAHU3VjY2Vzc3NxAH4AC5YwNBV0AA5LZXlXaXRoQXJyRXhwcnNxAH4ACwtQYTt0AANyZXBzcQB+AAsJpNRFdAAHaXNFbXB0eXNxAH4AC0CJgkl0AAJuZXNxAH4AC/T9HEx0AAI8fnNxAH4AC5SGQiJ0AARST09Uc3EAfgALlXVxcnQAAX5zcQB+AAujjp4ldAAKT25jZVBhcnNlcnNxAH4AC5rFVvB0AARlbGVtc3EAfgAL855mPnQACWFjY2VwdFNlcXNxAH4AC0e0IrR0AAhyaWdodEFyZ3NxAH4AC/Mu3Ch0AAJlcXNxAH4AC8u158N0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAsA08BcdAADbG9nc3EAfgAL9DGkzXQABnJlcHNlcHNxAH4AC775EKV0AAJ+IXNxAH4AC6DHkwx0AAhNb3JlS2V5c3NxAH4AC1FVmLh0AAIjI3NxAH4AC42EXhJ0AARsaXN0c3EAfgALP9ZibHQACGZpbmFsaXplc3EAfgAL5XUEVnQADnByb2R1Y3RFbGVtZW50c3EAfgALZx91fHQACGhhc2hDb2Rlc3EAfgALHc7htXQAA0tleXNxAH4AC5h8a3R0AAdkb3RMaXN0c3EAfgAL7YJiR3QAB2NoYWlucjFzcQB+AAsv0WSmdAAGYXBwZW5kc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4BH3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AAx4cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJWlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5TdGF0ZW1lbnR1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4BN3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgEfTAAJaW5oZXJpdGVkcQB+AR9MAAdwYXJlbnRzcQB+AR94cQB+ATxzcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgAMTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4BO3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4BO3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AAx4cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4BVHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4BVXNxAH4BSHQAA0FueXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVR0AAVzY2FsYXEAfgFbc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAKmlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5LZXlXaXRoQXJyRXhwcnVxAH4BLwAAAAB+cQB+ATF0AAhDbGFzc0RlZnVxAH4BNQAAAABzcQB+ATdxAH4BPXNxAH4BN3NxAH4BP3NxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgFGAAAAB3NxAH4BSHQADFNlcmlhbGl6YWJsZXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIdAAHUHJvZHVjdHEAfgF2c3EAfgFIdAAGRXF1YWxzcQB+AXZzcQB+AUh0AAlTdGF0ZW1lbnRzcQB+AUxzcQB+AU91cQB+AVIAAAAGc3EAfgFUdAACaW9zcQB+AVR0AAR6aW5rc3EAfgFUdAAFYm9zb25zcQB+AVR0AARic29uc3EAfgFUdAAIYnNvblBhdGhxAH4BW3NxAH4BSHEAfgFLc3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUcQB+AVlxAH4BW3NxAH4BSHEAfgFdcQB+AXZzcQB+ARxxAH4BKXVxAH4BKgAAAABzcQB+ASwAdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25QYXRoLkFyckV4cHJ1cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4Bq3NxAH4BSHQABkVxdWFsc3EAfgGrc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgGrc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5IYWxmTmFtZXVxAH4BLwAAAABxAH4BaHVxAH4BNQAAAABzcQB+ATdxAH4BPXNxAH4BN3NxAH4BP3NxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgFGAAAAB3NxAH4BSHEAfgF1c3EAfgFMc3EAfgFPdXEAfgFSAAAAAnNxAH4BVHEAfgFicQB+AVtzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHQAAmlvcQB+AVtzcQB+AUhxAH4BgnEAfgHfc3EAfgFIdAAGRXF1YWxzcQB+Ad9zcQB+AUh0AAlTdGF0ZW1lbnRzcQB+AUxzcQB+AU91cQB+AVIAAAAGc3EAfgFUdAACaW9zcQB+AVR0AAR6aW5rc3EAfgFUdAAFYm9zb25zcQB+AVR0AARic29uc3EAfgFUdAAIYnNvblBhdGhxAH4BW3NxAH4BSHEAfgFLc3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUcQB+AVlxAH4BW3NxAH4BSHEAfgFdcQB+Ad9zcQB+ARxxAH4BKXVxAH4BKgAAAABzcQB+ASwAdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25QYXRoLkhhc0VsZW11cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4CE3NxAH4BSHQABkVxdWFsc3EAfgITc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgITc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAH2lvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5LZXl1cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4CR3NxAH4BSHQABkVxdWFsc3EAfgJHc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgJHc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAIGlvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5ST09UdXEAfgEvAAAAAHEAfgFodXEAfgE1AAAAAHNxAH4BN3EAfgE9c3EAfgE3c3EAfgE/c3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+AUYAAAAHc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAACc3EAfgFUcQB+AWJxAH4BW3NxAH4BSHEAfgF1c3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUdAACaW9xAH4BW3NxAH4BSHEAfgGCcQB+AntzcQB+AUh0AAZFcXVhbHNxAH4Ce3NxAH4BSHQACVN0YXRlbWVudHNxAH4BTHNxAH4BT3VxAH4BUgAAAAZzcQB+AVR0AAJpb3NxAH4BVHQABHppbmtzcQB+AVR0AAVib3NvbnNxAH4BVHQABGJzb25zcQB+AVR0AAhic29uUGF0aHEAfgFbc3EAfgFIcQB+AUtzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVRxAH4BWXEAfgFbc3EAfgFIcQB+AV1xAH4Ce3NxAH4BHHEAfgEpdXEAfgEqAAAAAHNxAH4BLAB0ACRpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGguTW9yZUtleXN1cQB+AS8AAAAAcQB+AWh1cQB+ATUAAAAAc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAAdzcQB+AUhxAH4BdXNxAH4BTHNxAH4BT3VxAH4BUgAAAAJzcQB+AVRxAH4BYnEAfgFbc3EAfgFIcQB+AXVzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVR0AAJpb3EAfgFbc3EAfgFIcQB+AYJxAH4Cr3NxAH4BSHQABkVxdWFsc3EAfgKvc3EAfgFIdAAJU3RhdGVtZW50c3EAfgFMc3EAfgFPdXEAfgFSAAAABnNxAH4BVHQAAmlvc3EAfgFUdAAEemlua3NxAH4BVHQABWJvc29uc3EAfgFUdAAEYnNvbnNxAH4BVHQACGJzb25QYXRocQB+AVtzcQB+AUhxAH4BS3NxAH4BTHNxAH4BT3VxAH4BUgAAAANzcQB+AVRxAH4BV3NxAH4BVHEAfgFZcQB+AVtzcQB+AUhxAH4BXXEAfgKvc3EAfgEccQB+ASl1cQB+ASoAAAAAc3EAfgEsAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uUGF0aC5Qcm9ncmFtdXEAfgEvAAAAAHEAfgFodXEAfgE1AAAAAHNxAH4BN3EAfgE9c3EAfgE3c3EAfgE/c3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BGgAAAABzcQB+ATd1cQB+AUYAAAACc3EAfgFIcQB+AUtzcQB+AUxzcQB+AU91cQB+AVIAAAADc3EAfgFUcQB+AVdzcQB+AVRxAH4BWXEAfgFbc3EAfgFIcQB+AV1zcQB+AUxzcQB+AU91cQB+AVIAAAACc3EAfgFUcQB+AWJxAH4BW3NxAH4BHHEAfgEpdXEAfgEqAAAAAHNxAH4BLAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGguVGlueUxhbmd1YWdldXEAfgEvAAAAAHEAfgFodXEAfgE1AAAAAXQAGnNjYWxhLmFubm90YXRpb24ubWlncmF0aW9uc3EAfgE3cQB+AT1zcQB+ATdzcQB+AT9zcQB+ATd1cQB+ARoAAAAAc3EAfgE3dXEAfgEaAAAAAHNxAH4BN3VxAH4BRgAAAARzcQB+AUh0AAxSZWdleFBhcnNlcnNzcQB+AUxzcQB+AU91cQB+AVIAAAAFc3EAfgFUcQB+AWJzcQB+AVR0AAR1dGlsc3EAfgFUdAAHcGFyc2luZ3NxAH4BVHQACmNvbWJpbmF0b3JxAH4BW3NxAH4BSHQAB1BhcnNlcnNxAH4C/3NxAH4BSHEAfgFLc3EAfgFMc3EAfgFPdXEAfgFSAAAAA3NxAH4BVHEAfgFXc3EAfgFUcQB+AVlxAH4BW3NxAH4BSHEAfgFdc3EAfgFMc3EAfgFPdXEAfgFSAAAAAnNxAH4BVHEAfgFicQB+AVt1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0ABtpby56aW5rLmJvc29uLmJzb24uYnNvblBhdGhzcQB+Axh0AAdpby56aW5rc3EAfgMYdAASaW8uemluay5ib3Nvbi5ic29uc3EAfgMYdAACaW9zcQB+Axh0AA1pby56aW5rLmJvc29uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQfUDUkbkvUWZPOp1uAk9NbCpv2rg==
io.zink.boson.bson.bsonValue.BsBoson -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.BsBoson$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.BsException -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.BsException$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.BsObject$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwfHk5RgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw20ikN3QABm5vdGlmeXNxAH4ADGbC50N0AAhCc09iamVjdHNxAH4ADKPMTJN0AAR3YWl0c3EAfgAMXKvMIXQADSRhc0luc3RhbmNlT2ZzcQB+AAyEvNiGdAAGZXF1YWxzc3EAfgAMmT2o3HQADGFzSW5zdGFuY2VPZnNxAH4ADO2SL4V0AAxzeW5jaHJvbml6ZWRzcQB+AAysCsNddAANJGlzSW5zdGFuY2VPZnNxAH4ADMB5MCh0AAlub3RpZnlBbGxzcQB+AAzuXuYMdAAMaXNJbnN0YW5jZU9mc3EAfgAMVmsb9HQAAj09c3EAfgAM+hoabXQABWNsb25lc3EAfgAM/hCB53QACHRvU3RyaW5nc3EAfgAMXR8IgnQAAiE9c3EAfgAM4t29zXQACGdldENsYXNzc3EAfgAM2lD8kHQACkJzb25GYWNhZGVzcQB+AAwDk852dAACbmVzcQB+AAzGs6RNdAACZXFzcQB+AAwVDhDwdAAGdG9Cc29uc3EAfgAMw4JtN3QAAiMjc3EAfgAMuUOUDHQACGZpbmFsaXplc3EAfgAMbrh443QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJ2lvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNvbkZhY2FkZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBbc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AYHNxAH4AW3VxAH4APgAAAABzcQB+AFt1cQB+AD4AAAAAc3EAfgBbdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBfdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBfc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB4dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB5c3EAfgBsdAADQW55c3EAfgBwc3EAfgBzdXEAfgB2AAAAAnNxAH4AeHQABXNjYWxhcQB+AH9zcQB+AEBxAH4ATXVxAH4ATgAAAABzcQB+AFAAdAAlaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc09iamVjdHVxAH4AUwAAAAB+cQB+AFV0AAZNb2R1bGV1cQB+AFkAAAAAc3EAfgBbcQB+AGFzcQB+AFtzcQB+AGNzcQB+AFt1cQB+AD4AAAAAc3EAfgBbdXEAfgA+AAAAAHNxAH4AW3VxAH4AagAAAANzcQB+AGx0AApCc29uRmFjYWRlc3EAfgBwc3EAfgBzdXEAfgB2AAAABnNxAH4AeHQAAmlvc3EAfgB4dAAEemlua3NxAH4AeHQABWJvc29uc3EAfgB4dAAEYnNvbnNxAH4AeHQACWJzb25WYWx1ZXEAfgB/c3EAfgBscQB+AG9zcQB+AHBzcQB+AHN1cQB+AHYAAAADc3EAfgB4cQB+AHtzcQB+AHhxAH4AfXEAfgB/c3EAfgBscQB+AIFzcQB+AHBzcQB+AHN1cQB+AHYAAAACc3EAfgB4cQB+AIZxAH4Af3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+ALR0ABJpby56aW5rLmJvc29uLmJzb25zcQB+ALR0AAJpb3NxAH4AtHQADWlvLnppbmsuYm9zb25zcQB+ALR0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTab95Pj6xwkKmlItzslrPDvcgVBw==
io.zink.boson.bson.bsonValue.BsSeq -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.BsSeq$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.BsValue -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1Q2JOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj24SCnQABm5vdGlmeXNxAH4ADHODsFl0AAdCc1ZhbHVlc3EAfgAMof4bNnQAC0JzRXhjZXB0aW9uc3EAfgAMpqo/OnQABHdhaXRzcQB+AAwp7O1cdAANJGFzSW5zdGFuY2VPZnNxAH4ADJ1Zmc90AAxwcm9kdWN0QXJpdHlzcQB+AAwR6GfOdAAGZXF1YWxzc3EAfgAM0mqOm3QAB0JzQm9zb25zcQB+AAxgHW1XdAAMYXNJbnN0YW5jZU9mc3EAfgAMs3QcVXQADHN5bmNocm9uaXplZHNxAH4ADP4qx510AA0kaXNJbnN0YW5jZU9mc3EAfgAM4sjIXHQACGNhbkVxdWFsc3EAfgAMQhHMB3QADXByb2R1Y3RQcmVmaXhzcQB+AAw0Ub+BdAAJbm90aWZ5QWxsc3EAfgAMhj6PSXQADGlzSW5zdGFuY2VPZnNxAH4ADOmNyIp0AAY8aW5pdD5zcQB+AAwTfUr2dAACPT1zcQB+AAxm8k4zdAAFY2xvbmVzcQB+AAyKW6w/dAAGJGluaXQkc3EAfgAMP8pRZ3QABGNvcHlzcQB+AAxAIfL1dAAIdG9TdHJpbmdzcQB+AAypapIidAACIT1zcQB+AAyyNsjOdAAIZ2V0Q2xhc3NzcQB+AAxCUy95dAAIZ2V0VmFsdWVzcQB+AAxjHjPYdAAOY29weSRkZWZhdWx0JDFzcQB+AAzvR09FdAAFQnNTZXFzcQB+AAy+MXKNdAACbmVzcQB+AAxJbSrCdAAFdmFsdWVzcQB+AAzSkbQcdAACZXFzcQB+AAxCu7gXdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaLxxrXQAAiMjc3EAfgAM6qnmhXQACGZpbmFsaXplc3EAfgAM7ImteXQADnByb2R1Y3RFbGVtZW50c3EAfgAMkKAAYXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAABHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AW3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwCXQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNWYWx1ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBzc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFtMAAlpbmhlcml0ZWRxAH4AW0wAB3BhcmVudHNxAH4AW3hxAH4AeHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdzcQB+AFhxAH4AZXVxAH4AZgAAAABzcQB+AGgAdAAiaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Cc1NlcXVxAH4AawAAAAB+cQB+AG10AAhDbGFzc0RlZnVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHQADFNlcmlhbGl6YWJsZXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJBxAH4AnnEAfgCXc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJB0AAJpb3EAfgCXc3EAfgCEdAAHUHJvZHVjdHEAfgCyc3EAfgCEdAAGRXF1YWxzcQB+ALJzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnNxAH4AWHEAfgBldXEAfgBmAAAAAHNxAH4AaAB0AChpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlLkJzRXhjZXB0aW9udXEAfgBrAAAAAHEAfgCkdXEAfgBxAAAAAHNxAH4Ac3EAfgB5c3EAfgBzc3EAfgB7c3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AIIAAAAHc3EAfgCEcQB+ALFzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHEAfgC+cQB+AOdzcQB+AIR0AAZFcXVhbHNxAH4A53NxAH4AhHQAB0JzVmFsdWVzcQB+AIhzcQB+AIt1cQB+AI4AAAAGc3EAfgCQdAACaW9zcQB+AJB0AAR6aW5rc3EAfgCQdAAFYm9zb25zcQB+AJB0AARic29uc3EAfgCQdAAJYnNvblZhbHVlcQB+AJdzcQB+AIRxAH4Ah3NxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHEAfgCVcQB+AJdzcQB+AIRxAH4AmXEAfgDnc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAJGlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuQnNCb3NvbnVxAH4AawAAAABxAH4ApHVxAH4AcQAAAABzcQB+AHNxAH4AeXNxAH4Ac3NxAH4Ae3NxAH4Ac3VxAH4AVgAAAABzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgCCAAAAB3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHEAfgCecQB+AJdzcQB+AIRxAH4AsXNxAH4AiHNxAH4Ai3VxAH4AjgAAAANzcQB+AJBxAH4Ak3NxAH4AkHQAAmlvcQB+AJdzcQB+AIRxAH4AvnEAfgEbc3EAfgCEdAAGRXF1YWxzcQB+ARtzcQB+AIR0AAdCc1ZhbHVlc3EAfgCIc3EAfgCLdXEAfgCOAAAABnNxAH4AkHQAAmlvc3EAfgCQdAAEemlua3NxAH4AkHQABWJvc29uc3EAfgCQdAAEYnNvbnNxAH4AkHQACWJzb25WYWx1ZXEAfgCXc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4BG3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAFc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2lvLnppbmtzcQB+AUF0ABJpby56aW5rLmJvc29uLmJzb25zcQB+AUF0AAJpb3NxAH4BQXQADWlvLnppbmsuYm9zb25zcQB+AUF0ABxpby56aW5rLmJvc29uLmJzb24uYnNvblZhbHVlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRL/VUXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLWNvcmUvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQEYwvlLH/9oYLe7vhyvXxMeesCcw==
io.zink.boson.bson.bsonValue.DefaultWrites -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhweIw4zQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAANzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHDww7bHdAANQnNCb3NvbldyaXRlc3NxAH4ACxH8CoV0AAtCc1NlcVdyaXRlc3NxAH4ACxM/HMJ0ABFCc0V4Y2VwdGlvbldyaXRlc3VxAH4ACQAAABlzcQB+AAtKQHLKdAAGbm90aWZ5c3EAfgALYDcNt3QABmFwcGx5MXNxAH4AC/I86nJ0AAR3YWl0c3EAfgALxluCjHQADSRhc0luc3RhbmNlT2ZzcQB+AAtTr/8sdAAGZXF1YWxzc3EAfgAL93wUn3QABldyaXRlc3NxAH4ACy5AjT10AAxhc0luc3RhbmNlT2ZzcQB+AAtrozg0dAAMc3luY2hyb25pemVkc3EAfgALSlBhFXQADURlZmF1bHRXcml0ZXNzcQB+AAv56TibdAANJGlzSW5zdGFuY2VPZnNxAH4AC4Jjdkx0AAlub3RpZnlBbGxzcQB+AAuh0iMcdAAMaXNJbnN0YW5jZU9mc3EAfgALyWvJd3QABWFwcGx5c3EAfgALXVJhY3QAAj09c3EAfgALBkYbzHQABWNsb25lc3EAfgALcl6TrHQABiRpbml0JHNxAH4ACzkmF410AAh0b1N0cmluZ3NxAH4AC/NkzbF0AAIhPXNxAH4AC1ZWYPZ0AAhnZXRDbGFzc3NxAH4AC/ZKzYl0AAJuZXNxAH4AC40le1x0AAZ3cml0ZXNzcQB+AAu6fASJdAACZXFzcQB+AAtZHkwedAACIyNzcQB+AAvdWem1dAAIZmluYWxpemVzcQB+AAtynJ0GdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAADc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBPeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Xcml0ZXN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AVEwAAmlkcQB+AAxMAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AFFMAAp1cHBlckJvdW5kcQB+AGJMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AFoAAAAAdAAlaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Xcml0ZXMuQXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADEwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHB0AAdOb3RoaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBpc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB2dXEAfgBfAAAAAHNxAH4AZ3QAA0FueXEAfgBvfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQADUNvbnRyYXZhcmlhbnR+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cQB+AH90AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhxAH4AaXNxAH4Ah3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBPTAAJaW5oZXJpdGVkcQB+AE9MAAdwYXJlbnRzcQB+AE94cQB+AGpzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgBKAAAAAHNxAH4Ah3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3EAfgBndAAGT2JqZWN0c3EAfgBtc3EAfgBwdXEAfgBzAAAAA3NxAH4AdXQABGphdmFzcQB+AHV0AARsYW5ncQB+AHpzcQB+AGdxAH4AfXNxAH4AbXNxAH4AcHVxAH4AcwAAAAJzcQB+AHVxAH4AeHEAfgB6c3EAfgBMcQB+AFl1cQB+AFoAAAAAc3EAfgBcAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuV3JpdGVzdXEAfgBfAAAAAH5xAH4AgnQABk1vZHVsZXVxAH4AhQAAAABzcQB+AIdxAH4Ai3NxAH4Ah3NxAH4AjXNxAH4Ah3VxAH4ASgAAAABzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgCUAAAAA3NxAH4AZ3QADURlZmF1bHRXcml0ZXNzcQB+AG1zcQB+AHB1cQB+AHMAAAAGc3EAfgB1dAACaW9zcQB+AHV0AAR6aW5rc3EAfgB1dAAFYm9zb25zcQB+AHV0AARic29uc3EAfgB1dAAJYnNvblZhbHVlcQB+AHpzcQB+AGdxAH4Al3NxAH4AbXNxAH4AcHVxAH4AcwAAAANzcQB+AHVxAH4AnHNxAH4AdXEAfgCecQB+AHpzcQB+AGdxAH4AfXNxAH4AbXNxAH4AcHVxAH4AcwAAAAJzcQB+AHVxAH4AeHEAfgB6c3EAfgBMcQB+AFl1cQB+AFoAAAAAc3EAfgBcAXQAKmlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuRGVmYXVsdFdyaXRlc3VxAH4AXwAAAABxAH4Ag3VxAH4AhQAAAABzcQB+AIdxAH4Ai3NxAH4Ah3NxAH4AjXNxAH4Ah3VxAH4ASgAAAABzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgCUAAAAAnNxAH4AZ3EAfgCXc3EAfgBtc3EAfgBwdXEAfgBzAAAAA3NxAH4AdXEAfgCcc3EAfgB1cQB+AJ5xAH4AenNxAH4AZ3EAfgB9c3EAfgBtc3EAfgBwdXEAfgBzAAAAAnNxAH4AdXEAfgB4cQB+AHp1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0AAdpby56aW5rc3EAfgDrdAASaW8uemluay5ib3Nvbi5ic29uc3EAfgDrdAACaW9zcQB+AOt0AA1pby56aW5rLmJvc29uc3EAfgDrdAAcaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0S/1VF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AAxMAA9zb3VyY2VEaXJlY3RvcnlxAH4ADHhwdAA5L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1jb3JlL3RhcmdldC9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU0btiCO3x4VdLgPzdml67PPh+Qz4=
io.zink.boson.bson.bsonValue.Writes -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhweIw4zQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAANzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHDww7bHdAANQnNCb3NvbldyaXRlc3NxAH4ACxH8CoV0AAtCc1NlcVdyaXRlc3NxAH4ACxM/HMJ0ABFCc0V4Y2VwdGlvbldyaXRlc3VxAH4ACQAAABlzcQB+AAtKQHLKdAAGbm90aWZ5c3EAfgALYDcNt3QABmFwcGx5MXNxAH4AC/I86nJ0AAR3YWl0c3EAfgALxluCjHQADSRhc0luc3RhbmNlT2ZzcQB+AAtTr/8sdAAGZXF1YWxzc3EAfgAL93wUn3QABldyaXRlc3NxAH4ACy5AjT10AAxhc0luc3RhbmNlT2ZzcQB+AAtrozg0dAAMc3luY2hyb25pemVkc3EAfgALSlBhFXQADURlZmF1bHRXcml0ZXNzcQB+AAv56TibdAANJGlzSW5zdGFuY2VPZnNxAH4AC4Jjdkx0AAlub3RpZnlBbGxzcQB+AAuh0iMcdAAMaXNJbnN0YW5jZU9mc3EAfgALyWvJd3QABWFwcGx5c3EAfgALXVJhY3QAAj09c3EAfgALBkYbzHQABWNsb25lc3EAfgALcl6TrHQABiRpbml0JHNxAH4ACzkmF410AAh0b1N0cmluZ3NxAH4AC/NkzbF0AAIhPXNxAH4AC1ZWYPZ0AAhnZXRDbGFzc3NxAH4AC/ZKzYl0AAJuZXNxAH4AC40le1x0AAZ3cml0ZXNzcQB+AAu6fASJdAACZXFzcQB+AAtZHkwedAACIyNzcQB+AAvdWem1dAAIZmluYWxpemVzcQB+AAtynJ0GdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAADc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBPeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Xcml0ZXN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AVEwAAmlkcQB+AAxMAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AFFMAAp1cHBlckJvdW5kcQB+AGJMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AFoAAAAAdAAlaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Xcml0ZXMuQXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADEwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHB0AAdOb3RoaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBpc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB2dXEAfgBfAAAAAHNxAH4AZ3QAA0FueXEAfgBvfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQADUNvbnRyYXZhcmlhbnR+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cQB+AH90AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhxAH4AaXNxAH4Ah3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBPTAAJaW5oZXJpdGVkcQB+AE9MAAdwYXJlbnRzcQB+AE94cQB+AGpzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgBKAAAAAHNxAH4Ah3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3EAfgBndAAGT2JqZWN0c3EAfgBtc3EAfgBwdXEAfgBzAAAAA3NxAH4AdXQABGphdmFzcQB+AHV0AARsYW5ncQB+AHpzcQB+AGdxAH4AfXNxAH4AbXNxAH4AcHVxAH4AcwAAAAJzcQB+AHVxAH4AeHEAfgB6c3EAfgBMcQB+AFl1cQB+AFoAAAAAc3EAfgBcAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuV3JpdGVzdXEAfgBfAAAAAH5xAH4AgnQABk1vZHVsZXVxAH4AhQAAAABzcQB+AIdxAH4Ai3NxAH4Ah3NxAH4AjXNxAH4Ah3VxAH4ASgAAAABzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgCUAAAAA3NxAH4AZ3QADURlZmF1bHRXcml0ZXNzcQB+AG1zcQB+AHB1cQB+AHMAAAAGc3EAfgB1dAACaW9zcQB+AHV0AAR6aW5rc3EAfgB1dAAFYm9zb25zcQB+AHV0AARic29uc3EAfgB1dAAJYnNvblZhbHVlcQB+AHpzcQB+AGdxAH4Al3NxAH4AbXNxAH4AcHVxAH4AcwAAAANzcQB+AHVxAH4AnHNxAH4AdXEAfgCecQB+AHpzcQB+AGdxAH4AfXNxAH4AbXNxAH4AcHVxAH4AcwAAAAJzcQB+AHVxAH4AeHEAfgB6c3EAfgBMcQB+AFl1cQB+AFoAAAAAc3EAfgBcAXQAKmlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuRGVmYXVsdFdyaXRlc3VxAH4AXwAAAABxAH4Ag3VxAH4AhQAAAABzcQB+AIdxAH4Ai3NxAH4Ah3NxAH4AjXNxAH4Ah3VxAH4ASgAAAABzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgCUAAAAAnNxAH4AZ3EAfgCXc3EAfgBtc3EAfgBwdXEAfgBzAAAAA3NxAH4AdXEAfgCcc3EAfgB1cQB+AJ5xAH4AenNxAH4AZ3EAfgB9c3EAfgBtc3EAfgBwdXEAfgBzAAAAAnNxAH4AdXEAfgB4cQB+AHp1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0AAdpby56aW5rc3EAfgDrdAASaW8uemluay5ib3Nvbi5ic29uc3EAfgDrdAACaW9zcQB+AOt0AA1pby56aW5rLmJvc29uc3EAfgDrdAAcaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0S/1VF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AAxMAA9zb3VyY2VEaXJlY3RvcnlxAH4ADHhwdAA5L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1jb3JlL3RhcmdldC9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU0btiCO3x4VdLgPzdml67PPh+Qz4=
io.zink.boson.bson.bsonValue.Writes$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhweIw4zQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAANzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHDww7bHdAANQnNCb3NvbldyaXRlc3NxAH4ACxH8CoV0AAtCc1NlcVdyaXRlc3NxAH4ACxM/HMJ0ABFCc0V4Y2VwdGlvbldyaXRlc3VxAH4ACQAAABlzcQB+AAtKQHLKdAAGbm90aWZ5c3EAfgALYDcNt3QABmFwcGx5MXNxAH4AC/I86nJ0AAR3YWl0c3EAfgALxluCjHQADSRhc0luc3RhbmNlT2ZzcQB+AAtTr/8sdAAGZXF1YWxzc3EAfgAL93wUn3QABldyaXRlc3NxAH4ACy5AjT10AAxhc0luc3RhbmNlT2ZzcQB+AAtrozg0dAAMc3luY2hyb25pemVkc3EAfgALSlBhFXQADURlZmF1bHRXcml0ZXNzcQB+AAv56TibdAANJGlzSW5zdGFuY2VPZnNxAH4AC4Jjdkx0AAlub3RpZnlBbGxzcQB+AAuh0iMcdAAMaXNJbnN0YW5jZU9mc3EAfgALyWvJd3QABWFwcGx5c3EAfgALXVJhY3QAAj09c3EAfgALBkYbzHQABWNsb25lc3EAfgALcl6TrHQABiRpbml0JHNxAH4ACzkmF410AAh0b1N0cmluZ3NxAH4AC/NkzbF0AAIhPXNxAH4AC1ZWYPZ0AAhnZXRDbGFzc3NxAH4AC/ZKzYl0AAJuZXNxAH4AC40le1x0AAZ3cml0ZXNzcQB+AAu6fASJdAACZXFzcQB+AAtZHkwedAACIyNzcQB+AAvdWem1dAAIZmluYWxpemVzcQB+AAtynJ0GdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAADc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBPeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAjaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Xcml0ZXN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AVEwAAmlkcQB+AAxMAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AFFMAAp1cHBlckJvdW5kcQB+AGJMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AFoAAAAAdAAlaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZS5Xcml0ZXMuQXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADEwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHB0AAdOb3RoaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBpc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB2dXEAfgBfAAAAAHNxAH4AZ3QAA0FueXEAfgBvfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQADUNvbnRyYXZhcmlhbnR+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cQB+AH90AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhxAH4AaXNxAH4Ah3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBPTAAJaW5oZXJpdGVkcQB+AE9MAAdwYXJlbnRzcQB+AE94cQB+AGpzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgBKAAAAAHNxAH4Ah3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3EAfgBndAAGT2JqZWN0c3EAfgBtc3EAfgBwdXEAfgBzAAAAA3NxAH4AdXQABGphdmFzcQB+AHV0AARsYW5ncQB+AHpzcQB+AGdxAH4AfXNxAH4AbXNxAH4AcHVxAH4AcwAAAAJzcQB+AHVxAH4AeHEAfgB6c3EAfgBMcQB+AFl1cQB+AFoAAAAAc3EAfgBcAHQAI2lvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuV3JpdGVzdXEAfgBfAAAAAH5xAH4AgnQABk1vZHVsZXVxAH4AhQAAAABzcQB+AIdxAH4Ai3NxAH4Ah3NxAH4AjXNxAH4Ah3VxAH4ASgAAAABzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgCUAAAAA3NxAH4AZ3QADURlZmF1bHRXcml0ZXNzcQB+AG1zcQB+AHB1cQB+AHMAAAAGc3EAfgB1dAACaW9zcQB+AHV0AAR6aW5rc3EAfgB1dAAFYm9zb25zcQB+AHV0AARic29uc3EAfgB1dAAJYnNvblZhbHVlcQB+AHpzcQB+AGdxAH4Al3NxAH4AbXNxAH4AcHVxAH4AcwAAAANzcQB+AHVxAH4AnHNxAH4AdXEAfgCecQB+AHpzcQB+AGdxAH4AfXNxAH4AbXNxAH4AcHVxAH4AcwAAAAJzcQB+AHVxAH4AeHEAfgB6c3EAfgBMcQB+AFl1cQB+AFoAAAAAc3EAfgBcAXQAKmlvLnppbmsuYm9zb24uYnNvbi5ic29uVmFsdWUuRGVmYXVsdFdyaXRlc3VxAH4AXwAAAABxAH4Ag3VxAH4AhQAAAABzcQB+AIdxAH4Ai3NxAH4Ah3NxAH4AjXNxAH4Ah3VxAH4ASgAAAABzcQB+AId1cQB+AEoAAAAAc3EAfgCHdXEAfgCUAAAAAnNxAH4AZ3EAfgCXc3EAfgBtc3EAfgBwdXEAfgBzAAAAA3NxAH4AdXEAfgCcc3EAfgB1cQB+AJ5xAH4AenNxAH4AZ3EAfgB9c3EAfgBtc3EAfgBwdXEAfgBzAAAAAnNxAH4AdXEAfgB4cQB+AHp1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0AAdpby56aW5rc3EAfgDrdAASaW8uemluay5ib3Nvbi5ic29uc3EAfgDrdAACaW9zcQB+AOt0AA1pby56aW5rLmJvc29uc3EAfgDrdAAcaW8uemluay5ib3Nvbi5ic29uLmJzb25WYWx1ZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0S/1VF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AAxMAA9zb3VyY2VEaXJlY3RvcnlxAH4ADHhwdAA5L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1jb3JlL3RhcmdldC9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU0btiCO3x4VdLgPzdml67PPh+Qz4=
io.zink.boson.impl.BosonExtractor -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwAp4algAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAXc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwKpU4qnQABm5vdGlmeXNxAH4ADMzXcu90AA5Cb3NvbkV4dHJhY3RvcnNxAH4ADPnVtXh0AAR3YWl0c3EAfgAMdwWXRHQADSRhc0luc3RhbmNlT2ZzcQB+AAwK+D1HdAAGZXF1YWxzc3EAfgAMWESeGnQADGFzSW5zdGFuY2VPZnNxAH4ADKqqRlF0AAxzeW5jaHJvbml6ZWRzcQB+AAxZhTiMdAANJGlzSW5zdGFuY2VPZnNxAH4ADII7P4h0AAlub3RpZnlBbGxzcQB+AAw0GTjedAAMaXNJbnN0YW5jZU9mc3EAfgAMeQ0rtXQABjxpbml0PnNxAH4ADFnn2pB0AAJnb3NxAH4ADAN0vIB0AAI9PXNxAH4ADEj50wN0AAVjbG9uZXNxAH4ADJPHzdp0AARmdXNlc3EAfgAMLxeNCnQACHRvU3RyaW5nc3EAfgAMziez4nQAAiE9c3EAfgAMFIVsunQACGdldENsYXNzc3EAfgAMK9x9nHQAAm5lc3EAfgAMbsK5JHQAAmVxc3EAfgAMhHcdoXQAAiMjc3EAfgAMnIgmR3QACGZpbmFsaXplc3EAfgAMu0KkWnQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAIWlvLnppbmsuYm9zb24uaW1wbC5Cb3NvbkV4dHJhY3RvcnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAABc3IAF3hzYnRpLmFwaS5UeXBlUGFyYW1ldGVyZ2lV2+NykGsCAAZbAAthbm5vdGF0aW9uc3EAfgBKTAACaWRxAH4ADUwACmxvd2VyQm91bmR0ABBMeHNidGkvYXBpL1R5cGU7WwAOdHlwZVBhcmFtZXRlcnNxAH4AR0wACnVwcGVyQm91bmRxAH4AWEwACHZhcmlhbmNldAAUTHhzYnRpL2FwaS9WYXJpYW5jZTt4cHVxAH4AUAAAAAB0ACNpby56aW5rLmJvc29uLmltcGwuQm9zb25FeHRyYWN0b3IuVHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHB0AAdOb3RoaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBfc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgBsdXEAfgBVAAAAAHNxAH4AXXQAA0FueXEAfgBlfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACUludmFyaWFudH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhxAH4AdXQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHEAfgBfc3EAfgB9c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEVMAAlpbmhlcml0ZWRxAH4ARUwAB3BhcmVudHNxAH4ARXhxAH4AYHNxAH4AfXVxAH4AQAAAAABzcQB+AH11cQB+AEAAAAAAc3EAfgB9dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcQB+AF10AAVCb3NvbnNxAH4AY3NxAH4AZnVxAH4AaQAAAARzcQB+AGt0AAJpb3NxAH4Aa3QABHppbmtzcQB+AGt0AAVib3NvbnEAfgBwc3EAfgBddAAGT2JqZWN0c3EAfgBjc3EAfgBmdXEAfgBpAAAAA3NxAH4Aa3QABGphdmFzcQB+AGt0AARsYW5ncQB+AHBzcQB+AF1xAH4Ac3NxAH4AY3NxAH4AZnVxAH4AaQAAAAJzcQB+AGtxAH4AbnEAfgBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHaW8uemlua3NxAH4Ap3QAAmlvc3EAfgCndAANaW8uemluay5ib3NvbnNxAH4Ap3QAEmlvLnppbmsuYm9zb24uaW1wbHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0TAAvF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA6L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFAPigZa/KgAsa/pvsmFcWcYnmnNh
io.zink.boson.impl.BosonInjector -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwH0p4gwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAZc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwA7SIJHQABm5vdGlmeXNxAH4ADO74J8l0AAR3YWl0c3EAfgAMRqEX4HQADSRhc0luc3RhbmNlT2ZzcQB+AAzJwlrcdAAGZXF1YWxzc3EAfgAMi9yHkHQADGFzSW5zdGFuY2VPZnNxAH4ADNpTh550AAxzeW5jaHJvbml6ZWRzcQB+AAwmgsJTdAANJGlzSW5zdGFuY2VPZnNxAH4ADEumLRh0AAlub3RpZnlBbGxzcQB+AAyXU0zYdAAMaXNJbnN0YW5jZU9mc3EAfgAMhJek2nQABjxpbml0PnNxAH4ADGuVaZt0AAJnb3NxAH4ADCrDOPJ0AAI9PXNxAH4ADHz7TNZ0AA1Cb3NvbkluamVjdG9yc3EAfgAMZnkiGXQABWNsb25lc3EAfgAML8beYHQABGFub25zcQB+AAzeA5qMdAAEZnVzZXNxAH4ADO0QnG90AAh0b1N0cmluZ3NxAH4ADCw5wvV0AAhwYXJzZUluanNxAH4ADPgRl1B0AAIhPXNxAH4ADJO/4g50AAhnZXRDbGFzc3NxAH4ADDiLmol0AAJuZXNxAH4ADNA4WpJ0AAJlcXNxAH4ADPv0dVF0AAIjI3NxAH4ADN30HOV0AAhmaW5hbGl6ZXNxAH4ADEpvvCN0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEl4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACBpby56aW5rLmJvc29uLmltcGwuQm9zb25JbmplY3RvcnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAABc3IAF3hzYnRpLmFwaS5UeXBlUGFyYW1ldGVyZ2lV2+NykGsCAAZbAAthbm5vdGF0aW9uc3EAfgBOTAACaWRxAH4ADUwACmxvd2VyQm91bmR0ABBMeHNidGkvYXBpL1R5cGU7WwAOdHlwZVBhcmFtZXRlcnNxAH4AS0wACnVwcGVyQm91bmRxAH4AXEwACHZhcmlhbmNldAAUTHhzYnRpL2FwaS9WYXJpYW5jZTt4cHVxAH4AVAAAAAB0ACJpby56aW5rLmJvc29uLmltcGwuQm9zb25JbmplY3Rvci5Uc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHQAB05vdGhpbmdzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGNzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHB1cQB+AFkAAAAAc3EAfgBhdAADQW55cQB+AGl+cgASeHNidGkuYXBpLlZhcmlhbmNlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAJSW52YXJpYW50fnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHEAfgB5dAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cQB+AGNzcQB+AIFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ASUwACWluaGVyaXRlZHEAfgBJTAAHcGFyZW50c3EAfgBJeHEAfgBkc3EAfgCBdXEAfgBEAAAAAHNxAH4AgXVxAH4ARAAAAABzcQB+AIF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAA3NxAH4AYXQABUJvc29uc3EAfgBnc3EAfgBqdXEAfgBtAAAABHNxAH4Ab3QAAmlvc3EAfgBvdAAEemlua3NxAH4Ab3QABWJvc29ucQB+AHRzcQB+AGF0AAZPYmplY3RzcQB+AGdzcQB+AGp1cQB+AG0AAAADc3EAfgBvdAAEamF2YXNxAH4Ab3QABGxhbmdxAH4AdHNxAH4AYXEAfgB3c3EAfgBnc3EAfgBqdXEAfgBtAAAAAnNxAH4Ab3EAfgBycQB+AHR1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABHNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAdpby56aW5rc3EAfgCrdAACaW9zcQB+AKt0AA1pby56aW5rLmJvc29uc3EAfgCrdAASaW8uemluay5ib3Nvbi5pbXBsc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFjRMAC8XVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADovVXNlcnMvTmlnZS9aaW5rV29ya3NwYWNlL2Jvc29uL2Jvc29uLXNjYWxhL3RhcmdldC9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUVblzDn5wFoj8TgqAmoelYDtnFnI=
io.zink.boson.impl.BosonValidate -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwV2jU9wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAXc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwDq+oD3QABm5vdGlmeXNxAH4ADBdN+H90AAR3YWl0c3EAfgAM0EnZAnQADSRhc0luc3RhbmNlT2ZzcQB+AAx0Qxr3dAAGZXF1YWxzc3EAfgAMIEfR63QADGFzSW5zdGFuY2VPZnNxAH4ADHlWSSF0AAxzeW5jaHJvbml6ZWRzcQB+AAziGtDYdAANJGlzSW5zdGFuY2VPZnNxAH4ADKQ8dC50AAlub3RpZnlBbGxzcQB+AAzUSaZ3dAAMaXNJbnN0YW5jZU9mc3EAfgAMDqtjE3QABjxpbml0PnNxAH4ADNvcON10AAJnb3NxAH4ADGBL4Sd0AAI9PXNxAH4ADHZA5Tp0AAVjbG9uZXNxAH4ADKB7jQF0AARmdXNlc3EAfgAMaWC8AXQACHRvU3RyaW5nc3EAfgAM6YXzvnQADUJvc29uVmFsaWRhdGVzcQB+AAzfps5qdAACIT1zcQB+AAzqyEZadAAIZ2V0Q2xhc3NzcQB+AAztHn3+dAACbmVzcQB+AAz/adh1dAACZXFzcQB+AAyjBpgZdAACIyNzcQB+AAzVvMzVdAAIZmluYWxpemVzcQB+AAwVoSu+dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBFeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAgaW8uemluay5ib3Nvbi5pbXBsLkJvc29uVmFsaWRhdGV1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4ASkwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AEdMAAp1cHBlckJvdW5kcQB+AFhMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AFAAAAAAdAAiaW8uemluay5ib3Nvbi5pbXBsLkJvc29uVmFsaWRhdGUuVHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHB0AAdOb3RoaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBfc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgBsdXEAfgBVAAAAAHNxAH4AXXQAA0FueXEAfgBlfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACUludmFyaWFudH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhxAH4AdXQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHEAfgBfc3EAfgB9c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEVMAAlpbmhlcml0ZWRxAH4ARUwAB3BhcmVudHNxAH4ARXhxAH4AYHNxAH4AfXVxAH4AQAAAAABzcQB+AH11cQB+AEAAAAAAc3EAfgB9dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcQB+AF10AAVCb3NvbnNxAH4AY3NxAH4AZnVxAH4AaQAAAARzcQB+AGt0AAJpb3NxAH4Aa3QABHppbmtzcQB+AGt0AAVib3NvbnEAfgBwc3EAfgBddAAGT2JqZWN0c3EAfgBjc3EAfgBmdXEAfgBpAAAAA3NxAH4Aa3QABGphdmFzcQB+AGt0AARsYW5ncQB+AHBzcQB+AF1xAH4Ac3NxAH4AY3NxAH4AZnVxAH4AaQAAAAJzcQB+AGtxAH4AbnEAfgBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHaW8uemlua3NxAH4Ap3QAAmlvc3EAfgCndAANaW8uemluay5ib3NvbnNxAH4Ap3QAEmlvLnppbmsuYm9zb24uaW1wbHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0TAAvF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA6L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFE1ofTSh2QgsndJiAqttLMIrCEod
io.zink.joson.Joson -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwEC1dXgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwpGM8Z3QAEXNlcmlhbGl6ZVdpdGhUeXBlc3EAfgAMul3Zt3QADHdpdGhGaWx0ZXJJZHNxAH4ADH+TxC90AAZub3RpZnlzcQB+AAwdjznadAAMZ2V0RGVsZWdhdGVlc3EAfgAMP2BBWnQABHdhaXRzcQB+AAw0WN7udAANJGFzSW5zdGFuY2VPZnNxAH4ADNu2reh0ABRKc29uT2JqZWN0U2VyaWFsaXplcnNxAH4ADKlxxBR0AAZlcXVhbHNzcQB+AAx4tH5VdAAMYXNJbnN0YW5jZU9mc3EAfgAMy2Yd6nQAE0pzb25BcnJheVNlcmlhbGl6ZXJzcQB+AAwArypqdAALaGFuZGxlZFR5cGVzcQB+AAxWGCe3dAAIdmFsaWRhdGVzcQB+AAxD/SmJdAAMc3luY2hyb25pemVkc3EAfgAMTJmJiHQADSRpc0luc3RhbmNlT2ZzcQB+AAzZzd3DdAAJbm90aWZ5QWxsc3EAfgAMXpJgZXQAF2FjY2VwdEpzb25Gb3JtYXRWaXNpdG9yc3EAfgAMQBSVZnQAEHJlcGxhY2VEZWxlZ2F0ZWVzcQB+AAwzTxO7dAAMaXNJbnN0YW5jZU9mc3EAfgAMVpRBmXQACGluamVjdG9yc3EAfgAMh5pBlHQAFHVud3JhcHBpbmdTZXJpYWxpemVyc3EAfgAMXC0P7nQABjxpbml0PnNxAH4ADC46LoN0AAJnb3NxAH4ADM9NSaB0AApwcm9wZXJ0aWVzc3EAfgAMgYVsMnQAFmlzVW53cmFwcGluZ1NlcmlhbGl6ZXJzcQB+AAyUyZmsdAACPT1zcQB+AAz5F3ZudAAFSm9zb25zcQB+AAxBFhnjdAAFY2xvbmVzcQB+AAwbYez6dAAMdXNlc09iamVjdElkc3EAfgAMqQn3cHQABiRpbml0JHNxAH4ADCDAtpp0AARmdXNlc3EAfgAMbhax2XQACWV4dHJhY3RvcnNxAH4ADP9BrLp0AAh0b1N0cmluZ3NxAH4ADFbCFWV0AAIhPXNxAH4ADECYlvB0AAhnZXRDbGFzc3NxAH4ADL80Hqd0AAdpc0VtcHR5c3EAfgAMteW/1XQAAm5lc3EAfgAMTF0UYHQACXNlcmlhbGl6ZXNxAH4ADCyBoip0AAJlcXNxAH4ADHDK4hV0AAIjI3NxAH4ADM13AD50AAhmaW5hbGl6ZXNxAH4ADOZtJBx0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGl4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABNpby56aW5rLmpvc29uLkpvc29udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGlMAAlpbmhlcml0ZWRxAH4AaUwAB3BhcmVudHNxAH4AaXhxAH4AhnNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AGQAAAAAc3EAfgCBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCFdAAFSm9zb25zcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AIVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAARzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAAmlvc3EAfgCedAAEemlua3NxAH4AnnQABWpvc29uc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJ9zcQB+AJJ0AAZPYmplY3RzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCedAAEamF2YXNxAH4AnnQABGxhbmdxAH4Ap3NxAH4AknQAA0FueXNxAH4AlnNxAH4AmXVxAH4AnAAAAAJzcQB+AJ50AAVzY2FsYXEAfgCnc3EAfgBmcQB+AHN1cQB+AHQAAAAAc3EAfgB2AXQAE2lvLnppbmsuam9zb24uSm9zb251cQB+AHkAAAAAfnEAfgB7dAAFVHJhaXR1cQB+AH8AAAAAc3EAfgCBcQB+AIdzcQB+AIFzcQB+AIlzcQB+AIF1cQB+AGQAAAAAc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AkAAAAAJzcQB+AJJxAH4AqXNxAH4AlnNxAH4AmXVxAH4AnAAAAANzcQB+AJ5xAH4ArnNxAH4AnnEAfgCwcQB+AKdzcQB+AJJxAH4AsnNxAH4AlnNxAH4AmXVxAH4AnAAAAAJzcQB+AJ5xAH4At3EAfgCndXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHaW8uemlua3NxAH4A1nQADWlvLnppbmsuam9zb25zcQB+ANZ0AAJpb3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0TAAvF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA6L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDslYYTV5FfDCIj4B9lsHZLj24fJ
io.zink.joson.Joson$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwEC1dXgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwpGM8Z3QAEXNlcmlhbGl6ZVdpdGhUeXBlc3EAfgAMul3Zt3QADHdpdGhGaWx0ZXJJZHNxAH4ADH+TxC90AAZub3RpZnlzcQB+AAwdjznadAAMZ2V0RGVsZWdhdGVlc3EAfgAMP2BBWnQABHdhaXRzcQB+AAw0WN7udAANJGFzSW5zdGFuY2VPZnNxAH4ADNu2reh0ABRKc29uT2JqZWN0U2VyaWFsaXplcnNxAH4ADKlxxBR0AAZlcXVhbHNzcQB+AAx4tH5VdAAMYXNJbnN0YW5jZU9mc3EAfgAMy2Yd6nQAE0pzb25BcnJheVNlcmlhbGl6ZXJzcQB+AAwArypqdAALaGFuZGxlZFR5cGVzcQB+AAxWGCe3dAAIdmFsaWRhdGVzcQB+AAxD/SmJdAAMc3luY2hyb25pemVkc3EAfgAMTJmJiHQADSRpc0luc3RhbmNlT2ZzcQB+AAzZzd3DdAAJbm90aWZ5QWxsc3EAfgAMXpJgZXQAF2FjY2VwdEpzb25Gb3JtYXRWaXNpdG9yc3EAfgAMQBSVZnQAEHJlcGxhY2VEZWxlZ2F0ZWVzcQB+AAwzTxO7dAAMaXNJbnN0YW5jZU9mc3EAfgAMVpRBmXQACGluamVjdG9yc3EAfgAMh5pBlHQAFHVud3JhcHBpbmdTZXJpYWxpemVyc3EAfgAMXC0P7nQABjxpbml0PnNxAH4ADC46LoN0AAJnb3NxAH4ADM9NSaB0AApwcm9wZXJ0aWVzc3EAfgAMgYVsMnQAFmlzVW53cmFwcGluZ1NlcmlhbGl6ZXJzcQB+AAyUyZmsdAACPT1zcQB+AAz5F3ZudAAFSm9zb25zcQB+AAxBFhnjdAAFY2xvbmVzcQB+AAwbYez6dAAMdXNlc09iamVjdElkc3EAfgAMqQn3cHQABiRpbml0JHNxAH4ADCDAtpp0AARmdXNlc3EAfgAMbhax2XQACWV4dHJhY3RvcnNxAH4ADP9BrLp0AAh0b1N0cmluZ3NxAH4ADFbCFWV0AAIhPXNxAH4ADECYlvB0AAhnZXRDbGFzc3NxAH4ADL80Hqd0AAdpc0VtcHR5c3EAfgAMteW/1XQAAm5lc3EAfgAMTF0UYHQACXNlcmlhbGl6ZXNxAH4ADCyBoip0AAJlcXNxAH4ADHDK4hV0AAIjI3NxAH4ADM13AD50AAhmaW5hbGl6ZXNxAH4ADOZtJBx0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGl4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABNpby56aW5rLmpvc29uLkpvc29udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGlMAAlpbmhlcml0ZWRxAH4AaUwAB3BhcmVudHNxAH4AaXhxAH4AhnNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AGQAAAAAc3EAfgCBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCFdAAFSm9zb25zcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AIVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAARzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAAmlvc3EAfgCedAAEemlua3NxAH4AnnQABWpvc29uc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJ9zcQB+AJJ0AAZPYmplY3RzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCedAAEamF2YXNxAH4AnnQABGxhbmdxAH4Ap3NxAH4AknQAA0FueXNxAH4AlnNxAH4AmXVxAH4AnAAAAAJzcQB+AJ50AAVzY2FsYXEAfgCnc3EAfgBmcQB+AHN1cQB+AHQAAAAAc3EAfgB2AXQAE2lvLnppbmsuam9zb24uSm9zb251cQB+AHkAAAAAfnEAfgB7dAAFVHJhaXR1cQB+AH8AAAAAc3EAfgCBcQB+AIdzcQB+AIFzcQB+AIlzcQB+AIF1cQB+AGQAAAAAc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AkAAAAAJzcQB+AJJxAH4AqXNxAH4AlnNxAH4AmXVxAH4AnAAAAANzcQB+AJ5xAH4ArnNxAH4AnnEAfgCwcQB+AKdzcQB+AJJxAH4AsnNxAH4AlnNxAH4AmXVxAH4AnAAAAAJzcQB+AJ5xAH4At3EAfgCndXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHaW8uemlua3NxAH4A1nQADWlvLnppbmsuam9zb25zcQB+ANZ0AAJpb3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0TAAvF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA6L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDslYYTV5FfDCIj4B9lsHZLj24fJ
io.zink.joson.impl.JosonExtractor -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwCNKZMgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwjWG19XQAEXNlcmlhbGl6ZVdpdGhUeXBlc3EAfgAMRRMmjHQADHdpdGhGaWx0ZXJJZHNxAH4ADCiHHb50AAZub3RpZnlzcQB+AAx0mbiMdAAMZ2V0RGVsZWdhdGVlc3EAfgAMEbNPdnQABHdhaXRzcQB+AAx33hFGdAANJGFzSW5zdGFuY2VPZnNxAH4ADBAHhM90ABRKc29uT2JqZWN0U2VyaWFsaXplcnNxAH4ADDgjuxx0AAZlcXVhbHNzcQB+AAzJKfb2dAAMYXNJbnN0YW5jZU9mc3EAfgAMKlS01XQAE0pzb25BcnJheVNlcmlhbGl6ZXJzcQB+AAzHiuBkdAALaGFuZGxlZFR5cGVzcQB+AAwKLVfsdAAIdmFsaWRhdGVzcQB+AAyZhn7hdAAMc3luY2hyb25pemVkc3EAfgAMaspsiHQADSRpc0luc3RhbmNlT2ZzcQB+AAzfYs7MdAAJbm90aWZ5QWxsc3EAfgAMXG2/7XQAF2FjY2VwdEpzb25Gb3JtYXRWaXNpdG9yc3EAfgAMresmtHQAEHJlcGxhY2VEZWxlZ2F0ZWVzcQB+AAw1S0gbdAAMaXNJbnN0YW5jZU9mc3EAfgAMIli8j3QACGluamVjdG9yc3EAfgAM2xC/+XQAFHVud3JhcHBpbmdTZXJpYWxpemVyc3EAfgAM9fV/z3QABjxpbml0PnNxAH4ADPgBnst0AAJnb3NxAH4ADOzXqsJ0AApwcm9wZXJ0aWVzc3EAfgAMJ+TpbnQAFmlzVW53cmFwcGluZ1NlcmlhbGl6ZXJzcQB+AAzDpv0ndAACPT1zcQB+AAwRxcmBdAAFY2xvbmVzcQB+AAzMyrXfdAAMdXNlc09iamVjdElkc3EAfgAM+S30i3QADkpvc29uRXh0cmFjdG9yc3EAfgAMFWviXHQABiRpbml0JHNxAH4ADORTn4d0AARmdXNlc3EAfgAMbGl1cHQACWV4dHJhY3RvcnNxAH4ADPcdpip0AAh0b1N0cmluZ3NxAH4ADEgEXFB0AAIhPXNxAH4ADLJy/w50AAhnZXRDbGFzc3NxAH4ADOuMFct0AAdpc0VtcHR5c3EAfgAMFAfPSXQAAm5lc3EAfgAMxcM3jnQACXNlcmlhbGl6ZXNxAH4ADNVt7c10AAJlcXNxAH4ADMr8RlV0AAIjI3NxAH4ADE2y3bx0AAhmaW5hbGl6ZXNxAH4ADHsquLZ0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGl4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACFpby56aW5rLmpvc29uLmltcGwuSm9zb25FeHRyYWN0b3J1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AbkwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AGtMAAp1cHBlckJvdW5kcQB+AHxMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AHQAAAAAdAAjaW8uemluay5qb3Nvbi5pbXBsLkpvc29uRXh0cmFjdG9yLlRzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwdAAHTm90aGluZ3NyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ag3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AkHVxAH4AeQAAAABzcQB+AIF0AANBbnlxAH4AiX5yABJ4c2J0aS5hcGkuVmFyaWFuY2UAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAlJbnZhcmlhbnR+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cQB+AJl0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhxAH4Ag3NxAH4AoXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBpTAAJaW5oZXJpdGVkcQB+AGlMAAdwYXJlbnRzcQB+AGl4cQB+AIRzcQB+AKF1cQB+AGQAAAAAc3EAfgChdXEAfgBkAAAAAHNxAH4AoXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAADc3EAfgCBdAAFSm9zb25zcQB+AIdzcQB+AIp1cQB+AI0AAAAEc3EAfgCPdAACaW9zcQB+AI90AAR6aW5rc3EAfgCPdAAFam9zb25xAH4AlHNxAH4AgXQABk9iamVjdHNxAH4Ah3NxAH4AinVxAH4AjQAAAANzcQB+AI90AARqYXZhc3EAfgCPdAAEbGFuZ3EAfgCUc3EAfgCBcQB+AJdzcQB+AIdzcQB+AIp1cQB+AI0AAAACc3EAfgCPcQB+AJJxAH4AlHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAEmlvLnppbmsuam9zb24uaW1wbHNxAH4Ay3QAB2lvLnppbmtzcQB+AMt0AA1pby56aW5rLmpvc29uc3EAfgDLdAACaW9zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNEwALxdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOi9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTA/dnIWeYG2KYRYuWuhgrfW0S3Xw==
io.zink.joson.impl.JosonInjector -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw8dWoRwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAArc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwBeNE6XQAEXNlcmlhbGl6ZVdpdGhUeXBlc3EAfgAMdRi9CHQADUpvc29uSW5qZWN0b3JzcQB+AAybeKeGdAAMd2l0aEZpbHRlcklkc3EAfgAMr15FHnQABm5vdGlmeXNxAH4ADPKp+fd0AAxnZXREZWxlZ2F0ZWVzcQB+AAzpKsmmdAAEd2FpdHNxAH4ADC9RTON0AA0kYXNJbnN0YW5jZU9mc3EAfgAMGtyMNXQAFEpzb25PYmplY3RTZXJpYWxpemVyc3EAfgAMI9WcZXQABmVxdWFsc3NxAH4ADGV2EK10AAxhc0luc3RhbmNlT2ZzcQB+AAxHj0cldAATSnNvbkFycmF5U2VyaWFsaXplcnNxAH4ADESW3dF0AAtoYW5kbGVkVHlwZXNxAH4ADK31S0d0AAh2YWxpZGF0ZXNxAH4ADKAki7h0AAxzeW5jaHJvbml6ZWRzcQB+AAxZKJIpdAANJGlzSW5zdGFuY2VPZnNxAH4ADI4K9+l0AAlub3RpZnlBbGxzcQB+AAzpu9i7dAAXYWNjZXB0SnNvbkZvcm1hdFZpc2l0b3JzcQB+AAxDyU5QdAAQcmVwbGFjZURlbGVnYXRlZXNxAH4ADJBfT/h0AAxpc0luc3RhbmNlT2ZzcQB+AAz0iA0EdAAIaW5qZWN0b3JzcQB+AAypuWRydAAUdW53cmFwcGluZ1NlcmlhbGl6ZXJzcQB+AAxXj1PJdAAGPGluaXQ+c3EAfgAMl5qzQXQAAmdvc3EAfgAMAOBV4HQACnByb3BlcnRpZXNzcQB+AAwFR4VIdAAWaXNVbndyYXBwaW5nU2VyaWFsaXplcnNxAH4ADCQnLhx0AAI9PXNxAH4ADARxAUp0AAVjbG9uZXNxAH4ADMBK1Rt0AARhbm9uc3EAfgAMKujZ1XQADHVzZXNPYmplY3RJZHNxAH4ADNBJu1x0AAYkaW5pdCRzcQB+AAxuNWUIdAAEZnVzZXNxAH4ADJZgOUt0AAlleHRyYWN0b3JzcQB+AAwV+6R7dAAIdG9TdHJpbmdzcQB+AAwKyaNRdAAIcGFyc2VJbmpzcQB+AAwKAtEDdAACIT1zcQB+AAzXOrGBdAAIZ2V0Q2xhc3NzcQB+AAyk7TKhdAAHaXNFbXB0eXNxAH4ADFS5O0p0AAJuZXNxAH4ADOPU9Jh0AAlzZXJpYWxpemVzcQB+AAyFh7b9dAACZXFzcQB+AAwahgfbdAACIyNzcQB+AAw29T4vdAAIZmluYWxpemVzcQB+AAwN4qKsdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBteHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAgaW8uemluay5qb3Nvbi5pbXBsLkpvc29uSW5qZWN0b3J1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AckwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AG9MAAp1cHBlckJvdW5kcQB+AIBMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AHgAAAAAdAAiaW8uemluay5qb3Nvbi5pbXBsLkpvc29uSW5qZWN0b3IuVHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHB0AAdOb3RoaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCHc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCUdXEAfgB9AAAAAHNxAH4AhXQAA0FueXEAfgCNfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACUludmFyaWFudH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhxAH4AnXQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHEAfgCHc3EAfgClc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AG1MAAlpbmhlcml0ZWRxAH4AbUwAB3BhcmVudHNxAH4AbXhxAH4AiHNxAH4ApXVxAH4AaAAAAABzcQB+AKV1cQB+AGgAAAAAc3EAfgCldXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcQB+AIV0AAVKb3NvbnNxAH4Ai3NxAH4AjnVxAH4AkQAAAARzcQB+AJN0AAJpb3NxAH4Ak3QABHppbmtzcQB+AJN0AAVqb3NvbnEAfgCYc3EAfgCFdAAGT2JqZWN0c3EAfgCLc3EAfgCOdXEAfgCRAAAAA3NxAH4Ak3QABGphdmFzcQB+AJN0AARsYW5ncQB+AJhzcQB+AIVxAH4Am3NxAH4Ai3NxAH4AjnVxAH4AkQAAAAJzcQB+AJNxAH4AlnEAfgCYdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAASaW8uemluay5qb3Nvbi5pbXBsc3EAfgDPdAAHaW8uemlua3NxAH4Az3QADWlvLnppbmsuam9zb25zcQB+AM90AAJpb3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0TAAvF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA6L1VzZXJzL05pZ2UvWmlua1dvcmtzcGFjZS9ib3Nvbi9ib3Nvbi1zY2FsYS90YXJnZXQvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFHYJBxPx3DVx3VT3TuPm96+eWg56
source infos:
22 items
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/Bson.java -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonArray.java -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/java/bsonLib/BsonObject.java -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/benchmark/PerformanceAPI.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIFuse.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteArrTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/APIwithByteBufferTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BosonTester.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/BuffersTest.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ExtractorTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/HorribleTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorParserTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/InjectorsTest.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LanguageTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/LongInputTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/RestAssured.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/ReturnTypes.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/injectorAPITests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusInjectorTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/boson/jpPlusPlusTests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/io/zink/joson/APItests.scala -> 
AAAAAAAAAAA=
/Users/Nige/ZinkWorkspace/boson/boson-scala/src/test/scala/mapper/Mapper.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY0kFZMF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAPy9Vc2Vycy9OaWdlL1ppbmtXb3Jrc3BhY2UvYm9zb24vYm9zb24tc2NhbGEvdGFyZ2V0L3Rlc3QtY2xhc3Nlc3QAAS8=
